(define (game game-0-0-nd-10-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (hold (agent_holds agent))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-1-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion desk)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-2-nd-13-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (exists (?w - dodgeball) (in_motion rug))))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-3-nd-15-rd-2-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?r ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-4-nd-7-rd-15-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?c4 - west_sliding_door)
        (at-end
          (in ?c4 ?c4)
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-5-nd-12-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (exists (?x ?x0 - color ?ob - hexagonal_bin) (< (distance ?h floor) (distance ?h ?ob))))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-6-nd-14-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 6)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-7-nd-9-rd-8-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (on ?h desk)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-8-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (agent_holds ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-9-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?h)) (in ?b room_center)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-10-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - pyramid_block_blue)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-11-nd-12-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (agent_holds ?h))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-12-nd-6-rd-16-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?l2 - tall_cylindrical_block_yellow ?d - game_object ?x ?x0 - color)
        (then
          (once (on ?d ?l2))
          (hold (and (not (agent_holds ?d)) (not (object_orientation rug diagonal))))
          (hold (agent_holds ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-13-nd-13-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?r)) (agent_holds ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-14-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (not (adjacent ?h ?r))) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (object_orientation ?h upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)





(define (game game-0-15-nd-13-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?b - ball ?r - triangular_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?r))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference binKnockedOver
      (exists (?h - hexagonal_bin)
        (then
          (once (object_orientation ?h upright))
          (hold (and (not (touch agent ?h)) (not (agent_holds ?h))))
          (once (not (in_motion ?h)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once binKnockedOver) 1)
)
(:scoring
  (count throwToRampToBin)
)
)



(define (game game-2-0-nd-5-rd-5-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwToDrawerOrBin:hexagonal_bin) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-1-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* (count throwAttempt:blue) (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-2-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door room_center)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-3-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-4-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (not (agent_holds ?t))) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-5-nd-14-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count throwToDrawerOrBin:yellow:hexagonal_bin))
   )
 )
)
)





(define (game game-2-6-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (in_motion ?b))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-7-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either teddy_bear golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-8-nd-7-rd-14-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?d - chair ?h - teddy_bear ?b - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (once (on ?h ?b))
          (hold (touch ?d ?b))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-9-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- 40)
   )
 )
)
)





(define (game game-2-10-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (agent_holds ?t)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-11-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either flat_block_tan tall_cylindrical_block_green dodgeball_pink))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-12-nd-11-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference dodgeballThrownToBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?t)) (in_motion ?b)))
            (once (game_over))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-13-nd-16-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?t) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-14-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?d - alarm_clock ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?d) (adjacent door agent)))
            (hold (and (not (agent_holds ?d)) (in_motion ?d)))
            (once (and (not (in_motion ?d)) (in ?t ?d)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (+ (count-once-per-objects throwToDrawerOrBin:golfball:hexagonal_bin) (* 2 (count-once-per-objects throwToDrawerOrBin:dodgeball:hexagonal_bin))
    (* 3 (count-once-per-objects throwToDrawerOrBin:golfball:top_drawer))
    (+ (count-once-per-objects throwToDrawerOrBin) (- (count-once-per-objects throwAttempt))
   )
 )
)
)





(define (game game-2-15-nd-3-rd-14-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (open top_drawer)
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball) ?t - (either top_drawer hexagonal_bin))
      (and
        (preference throwToDrawerOrBin
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (not (in_motion ?b)) (in ?t ?b)))
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - (either dodgeball golfball))
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 6)
)
(:scoring
  (* 25 (count throwToDrawerOrBin:hexagonal_bin:flat_block))
)
)



(define (game game-3-0-nd-7-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd:orange)
 )
)
)





(define (game game-3-1-nd-9-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either golfball_white ball))
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-2-nd-5-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count blockInTowerAtEnd:building)
 )
)
)





(define (game game-3-3-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - building)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-4-nd-6-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd:cellphone:triangular_ramp_tan)
 )
)
)





(define (game game-3-5-nd-8-rd-7-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?t - basketball ?w1 - pyramid_block_red ?d - dodgeball)
            (at-end
              (opposite ?d ?b)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-6-nd-10-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l1 - cube_block ?h - doggie_bed ?c3 - bed)
            (at-end
              (in ?b ?c3)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-7-nd-7-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd:hexagonal_bin)
 )
)
)





(define (game game-3-8-nd-6-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?c - desk ?p2 - game_object)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?l ?p2)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-9-nd-6-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - pillow)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?o ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-10-nd-7-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd:yellow)
 )
)
)





(define (game game-3-11-nd-8-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b5 - book)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?l ?b5)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-12-nd-12-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?g - hexagonal_bin)
            (at-end
              (in ?g ?b)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-13-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - pyramid_block_blue)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-14-nd-10-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?s ?h - building)
            (at-end
              (in ?b ?s)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd)
 )
)
)





(define (game game-3-15-nd-6-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (in ?b ?l)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects blockInTowerAtEnd:dodgeball)
 )
)
)



(define (game game-5-0-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?h)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-1-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (in_motion ?h) (on ?h agent)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-2-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-3-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (on ?d ?h) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-4-nd-6-rd-17-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball)
        (then
          (hold-while (in_motion ?d) (or (not (same_color ?d green)) (not (on ?d ?d)) (in_motion ?d)))
          (once (broken rug))
          (once (in_motion ?d))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-5-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?d)) (in floor bed)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-6-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in desk rug)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-7-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (and (not (not (and (on ?d agent) (not (not (agent_holds ?d)))))) (in_motion room_center))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-8-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?b1 - flat_block ?r - golfball_green ?g - cube_block_yellow)
        (then
          (once (and (agent_holds ?g) (= (distance ?b1 agent) 1)))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?b1 ?r)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-9-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (and (on ?h ?d) (not (open rug)) (agent_holds ?h))) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-10-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?c - beachball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?c) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (in ?h ?c)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-11-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (same_object ?h ?d) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-12-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 0.9)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-13-nd-3-rd-3-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin:red:yellow)
)
)





(define (game game-5-14-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (= (distance ?h agent) 1)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion room_center)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-5-15-nd-13-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?d ?h) (in_motion ?h) (in_motion ?d)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)



(define (game game-6-0-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (+ (count-once failedThrowToBin:red) (count failedThrowToBin:hexagonal_bin) (* (count-once-per-objects throwBallToBin:teddy_bear:hexagonal_bin) 0.4)
   )
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-1-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:pink))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-2-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?b4 - doggie_bed)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?b4 ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-3-nd-12-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (once (in_motion ?b))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-4-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?h) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-5-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (* -21 2)
   )
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-6-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?h)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-7-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - cube_block)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-8-nd-14-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (in ?b ?h))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-9-nd-17-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (agent_crouches)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-10-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (exists (?t2 - drawer) (not (agent_holds ?h)))) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-11-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:triangular_ramp))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-12-nd-8-rd-15-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?t ?o - game_object)
            (then
              (hold (and (agent_holds ?o) (agent_holds ?t) (agent_crouches)))
              (once (agent_holds ?o))
              (hold (and (touch ?t ?o) (equal_x_position room_center ?t)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-13-nd-17-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (and (adjacent ?h agent) (not (and (agent_holds ?h) (exists (?f - laptop ?w1 - golfball_green) (agent_holds ?f)))))))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-14-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 0.4 (count failedThrowToBin:chair) 18 15 16 (count-once-per-external-objects failedThrowToBin:pink))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)





(define (game game-6-15-nd-12-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent ?h bed)
     )
   )
    (forall (?o - (either teddy_bear pillow))
      (game-conserved
        (not
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToBin
          (exists (?o ?d - cube_block)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?d ?b)))
           )
         )
       )
     )
   )
    (preference failedThrowToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count throwBallToBin:dodgeball))
    (* 20 (count throwBallToBin:basketball))
    (* 30 (count throwBallToBin:beachball))
    (- (count failedThrowToBin))
 )
)
)



(define (game game-8-0-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) 1)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-1-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds desk) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-2-nd-11-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (>= 9 3))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-3-nd-10-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count throwAttempt:hexagonal_bin:gray)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-4-nd-15-rd-3-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count-once-per-objects throwOverRamp:ball) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-5-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (on ?c ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-6-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?h - basketball)
        (then
          (once (agent_holds ?h))
          (hold (and (not (agent_holds ?h)) (in_motion ?h)))
          (once (not (in_motion ?h)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-7-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front rug) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-8-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< 0.5 (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-9-nd-14-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 5)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-10-nd-9-rd-9-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (count-once-per-objects throwOverRamp:desktop:cube_block) (count-once throwOverRamp))
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-11-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front desk) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-12-nd-13-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on ?c ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-13-nd-7-rd-16-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?h - golfball ?g - (either flat_block_yellow hexagonal_bin game_object))
        (then
          (once (agent_holds ?h))
          (once (agent_holds ?h))
          (once (> (distance rug ?h) (distance ?g ?h)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-14-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - side_table)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* 3 (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)





(define (game game-8-15-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (on floor ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference throwOverRamp
      (exists (?d - dodgeball ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (< (distance_side ?c front agent) (distance_side ?c back agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?c ?d))
          (once (and (not (in_motion ?d)) (< (distance_side ?c back ?d) (distance_side ?c front ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - dodgeball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once throwOverRamp) 1)
)
(:scoring
  (+ (* (count throwOverRamp:dodgeball:desk:chair) (= (count throwAttempt) 1)
      (count-once throwOverRamp)
   )
    (* 2 (= (count throwAttempt) 2)
      (count-once throwOverRamp)
   )
    (* (>= (count throwAttempt) 3)
      (count-once throwOverRamp)
   )
 )
)
)



(define (game game-9-0-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (on ?h ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-1-nd-18-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (on ?h ?d))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-2-nd-24-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (in_motion ?w1) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-3-nd-15-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?l1 - tall_cylindrical_block_green)
            (adjacent ?h ?l1)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-4-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (agent_holds ?h) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-5-nd-23-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (agent_holds agent))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-6-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (once (in ?h ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-7-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?d rug)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-8-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-9-nd-24-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (agent_holds ?d) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-10-nd-8-rd-20-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (hold (on ?h ?d))
          (once (or (not (exists (?b - cylindrical_block_green) (adjacent ?b ?h))) (in_motion ?d) (and (not (agent_holds ?d)) (object_orientation ?d diagonal)) (not (adjacent ?d ?h))))
          (once (not (agent_holds ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-11-nd-6-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (- 0.6)
 )
)
)





(define (game game-9-12-nd-26-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?d ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-13-nd-7-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-overlapping throwBallToBin:cube_block_yellow:pink) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-14-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (in ?d ?h))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)





(define (game game-9-15-nd-26-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (exists (?w - wall)
            (adjacent ?w ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?h agent) (opposite ?w1 ?w2))))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference bounceBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (or (on bed ?h) (exists (?w1 ?w2 - wall) (and (adjacent ?w1 ?h) (adjacent ?w2 agent) (opposite ?w1 ?w2))))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch floor ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count bounceBallToBin) (* 3 (count throwBallToBin))
 )
)
)



(define (game game-10-0-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (in_motion north_wall))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-1-nd-6-rd-15-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?b3 - tall_cylindrical_block)
        (at-end
          (= (distance ?b3 ?b3) (x_position ?b3))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-2-nd-5-rd-5-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (+ 4 (count throwTeddyOntoPillow:tall_cylindrical_block))
    10
 )
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-3-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (in_motion bed)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-4-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (once (not (forall (?c - cube_block_tan ?d - hexagonal_bin ?b - hexagonal_bin ?r - cellphone) (agent_holds ?r))))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-5-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - tall_cylindrical_block_tan)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-6-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?h - dodgeball_red ?h - golfball)
        (then
          (once (agent_holds ?o))
          (hold (and (not (agent_holds ?g)) (in_motion ?b)))
          (once (not (in_motion ?h)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-7-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?p)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-8-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (agent_holds ?t))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-9-nd-9-rd-1-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt:yellow:green) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-10-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (on ?t ?t))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-11-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (hold (agent_holds ?t))
          (once (adjacent ?t ?t))
          (once (not (adjacent ?t ?t)))
          (once (not (< (distance ?t ?t) (distance ?t ?t))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-12-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - dodgeball_red)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-13-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?b4 - dodgeball ?p - pillow)
        (then
          (once (agent_holds ?b4))
          (hold (and (not (agent_holds ?b4)) (in_motion ?b4)))
          (once (and (not (in_motion ?b4)) (on ?p ?b4)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-14-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - laptop)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?p ?t)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)





(define (game game-10-15-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwTeddyOntoPillow
      (exists (?t - teddy_bear ?p - pillow)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (on ?t ?p)))
       )
     )
   )
    (preference throwAttempt
      (exists (?t - teddy_bear)
        (then
          (once (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (not (in_motion ?t)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwTeddyOntoPillow)
)
)



(define (game game-11-0-nd-28-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o top_shelf)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-1-nd-16-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (and
                    (same_type ?l teddy_bear)
                    (agent_holds ?l)
                 )
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-2-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - game_object)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-3-nd-10-rd-19-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?t1 - (either hexagonal_bin))
            (then
              (once (on ?b ?t1))
              (hold-while (= (distance ?b ?t1) (distance ?b ?t1)) (not (agent_holds desk)))
              (once (agent_holds ?b))
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-4-nd-22-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - tall_rectangular_block_green)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-5-nd-23-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - game_object)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-6-nd-8-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (* (external-forall-maximize (count pyramidBlockAtopTowerAtEnd:red:blue)) 14)
      (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-7-nd-7-rd-5-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* 30 (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-8-nd-15-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects baseBlockInTowerAtEnd:cube_block:doggie_bed:teddy_bear))
   )
 )
)
)





(define (game game-11-9-nd-28-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o building)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-10-nd-9-rd-20-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?c2 - (either pencil shelf) ?p1 - triangle_block_green)
            (then
              (hold (agent_holds ?b))
              (once (agent_holds door))
              (hold (in_motion ?p1))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-11-nd-24-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?l ?b)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-12-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - cylindrical_block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-13-nd-27-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o ?b)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-14-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?b)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-once baseBlockInTowerAtEnd) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)





(define (game game-11-15-nd-13-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference baseBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (on floor ?l)
             )
           )
         )
       )
        (preference blockOnBlockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?l)
                   )
                 )
               )
                (not
                  (on floor ?l)
               )
             )
           )
         )
       )
        (preference pyramidBlockAtopTowerAtEnd
          (exists (?p - pyramid_block)
            (at-end
              (and
                (in ?b ?p)
                (not
                  (exists (?l - block)
                    (on ?p ?l)
                 )
               )
                (not
                  (exists (?o - game_object)
                    (and
                      (not
                        (same_type ?o block)
                     )
                      (touch ?o ?p)
                   )
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (external-forall-maximize
    (* (count-once pyramidBlockAtopTowerAtEnd) (count-once baseBlockInTowerAtEnd) (+ (count-overlapping blockOnBlockInTowerAtEnd:ball) (count-once-per-objects blockOnBlockInTowerAtEnd))
   )
 )
)
)



(define (game game-12-0-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?h)) (in_motion ?d)) (touch ?r ?d))
          (once (and (agent_holds north_wall) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-1-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - beachball)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-2-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - curved_wooden_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-3-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?r)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-4-nd-10-rd-8-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (in_motion bed)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-5-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin:hexagonal_bin:dodgeball_pink:dodgeball:book)
)
)





(define (game game-12-6-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?r) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-7-nd-12-rd-6-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (= (distance ?h ?h) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-8-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (and (adjacent floor ?h) (on ?d ?r))) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-9-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (once (in_motion ?r))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-10-nd-12-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (adjacent floor ?r))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-11-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?d ?h) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-12-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?h)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-13-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door ?r) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-14-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door ?h) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)





(define (game game-12-15-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToRampToBin
      (exists (?r - triangular_ramp ?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent ?h agent) (agent_crouches)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-unique-positions throwToRampToBin)
)
)



(define (game game-13-0-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?r top_drawer) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-1-nd-15-rd-7-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (touch ?r ?h) (not (game_over))))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-2-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:cube_block))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-3-nd-6-rd-15-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?l4 - basketball)
      (game-optional
        (object_orientation ?l4 sideways)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-4-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (count throwToRampToBin:green)
 )
)
)





(define (game game-13-5-nd-17-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (on agent ?h) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-6-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (- (count throwToRampToBin:dodgeball_blue) (count-once-per-objects throwToRampToBin)))
 )
)
)





(define (game game-13-7-nd-10-rd-13-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (agent_holds agent))
              (once (adjacent_side ?d front north_wall))
              (hold (< 1 (distance ?r ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-8-nd-9-rd-12-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (and
            (and
              (in_motion ?r)
              (in_motion ?r)
           )
            (in_motion ?h)
         )
          (adjacent_side ?r back room_center left)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-9-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?r)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-10-nd-12-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (once (in ?r ?h))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-11-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (in_motion ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-12-nd-17-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (and (and (or (not (not (agent_holds ?d))) (exists (?b2 - cube_block) (in ?r ?h))) (not (agent_holds ?h)) (in_motion desk) (and (= 5 (distance ?d ?h) (distance ?d ?r)) (touch ?h ?r))) (agent_holds ?r))))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-13-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?r) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-14-nd-14-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance room_center ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (agent_holds ?d) (or (exists (?f - pyramid_block ?d - dodgeball_blue) (opposite ?r ?d)) (not (agent_holds ?d))) (not (agent_holds ?d))) (touch ?h ?d))
              (once (and (in ?d ?r) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)





(define (game game-13-15-nd-20-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (and
          (< (distance ?h ?r) 1)
          (< (distance agent ?r) 0.5)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball golfball))
      (and
        (preference throwToRampToBin
          (exists (?r - triangular_ramp ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent door agent) (agent_crouches)))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?r ?d))
              (once (and (in ?h ?d) (not (in_motion ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 6 (count throwToRampToBin:dodgeball))
    (* 3 (count throwToRampToBin:golfball))
 )
)
)



(define (game game-14-0-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (adjacent bed ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-1-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (on ?b ?b)) (not (not (agent_holds ?b)))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-2-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (in top_shelf ?h))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-3-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (in agent ?h)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-4-nd-5-rd-5-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwInBin:room_center:purple) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-5-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (not (exists (?c - cube_block_yellow ?l2 - cylindrical_block) (not (in_motion ?h))))) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-6-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?e - triangular_ramp_tan)
        (then
          (once (agent_holds ?e))
          (hold (and (not (agent_holds ?e)) (in_motion ?e)))
          (once (not (in_motion ?e)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-7-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (agent_holds ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-8-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion east_wall)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-9-nd-13-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (not (is_setup_object ?b)) (touch ?h ?b) (and (and (touch ?h ?b) (adjacent ?b ?h) (in ?b bed) (in_motion ?h)) (and (not (not (adjacent ?b top_drawer))) (object_orientation ?h upside_down)))))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-10-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (in ?h ?b))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-11-nd-7-rd-3-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwInBin:green) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-12-nd-10-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (in ?b ?b))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-13-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (once (adjacent ?h ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-14-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (on rug agent) (agent_holds ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (adjacent bed ?b) (and (on ?b ?b) (and (and (or (in ?b desk) (not (in_motion ?b))) (= (distance ?b ?b) 0.9)) (exists (?l2 - flat_block) (same_type ?b top_drawer)) (rug_color_under ?b pink)))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)





(define (game game-14-15-nd-11-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_crouches))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwInBin)
)
)



(define (game game-15-0-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (agent_holds bed)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-1-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (not (and (not (agent_holds ?d)) (not (agent_holds agent)))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-2-nd-19-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (adjacent bed rug)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-3-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - hexagonal_bin ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-4-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?d)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-5-nd-21-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?b)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-6-nd-8-rd-2-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects blockInTowerKnockedByDodgeball:teddy_bear) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-7-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - basketball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-8-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h west_wall) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-9-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - ball)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-10-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (agent_holds ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-11-nd-20-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?c1 ?h)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-12-nd-11-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (< (distance ?d ?d) (distance ?d ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-13-nd-7-rd-15-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (game-conserved
        (in_motion ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-14-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?c) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)





(define (game game-15-15-nd-9-rd-1-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b - building)
      (and
        (game-conserved
          (adjacent ?h bed)
       )
        (game-conserved
          (object_orientation ?h upside_down)
       )
        (game-optional
          (on ?h ?b)
       )
        (forall (?c - cube_block)
          (game-optional
            (in ?b ?c)
         )
       )
        (exists (?c1 ?c2 ?c3 ?c4 ?c5 ?c6 - cube_block)
          (game-optional
            (and
              (on ?h ?c1)
              (on ?h ?c2)
              (on ?h ?c3)
              (on ?c1 ?c4)
              (on ?c2 ?c5)
              (on ?c4 ?c6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference blockInTowerKnockedByDodgeball
      (exists (?b - building ?c - cube_block ?d - dodgeball ?h - hexagonal_bin ?r - chair)
        (then
          (once (and (agent_holds ?d) (adjacent ?r agent) (on ?h ?b) (in ?b ?c)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
          (once (not (or (in_motion ?c) (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects blockInTowerKnockedByDodgeball:green) 2)
)
(:scoring
  (count-once-per-objects blockInTowerKnockedByDodgeball)
)
)



(define (game game-16-0-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on desk ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-1-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (in_motion ?b2)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?c)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-2-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - alarm_clock ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-3-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?r)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-4-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?t2 - curved_wooden_ramp ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?t2 front ?c back)
          (on floor ?b1)
          (adjacent_side ?t2 left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?t2 right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-5-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor agent)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-6-nd-7-rd-14-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?b - beachball ?b - golfball_green)
        (then
          (once (and (in_motion ?b) (or (in ?b ?b) (in_motion ?b) (agent_holds ?b) (not (in_motion ?b))) (in ?b ?b)))
          (once (agent_holds room_center))
          (once (touch agent ?b))
          (once (not (not (on ?b ?b))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-7-nd-7-rd-11-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (and
        (game-conserved
          (on agent ?h)
       )
        (forall (?p3 - ball)
          (game-conserved
            (in_motion ?c)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-8-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (and (not (equal_x_position ?h ?d)) (in_motion ?h)))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-9-nd-13-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b4)
          (adjacent_side ?h right ?b3)
          (in_motion agent)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-10-nd-13-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (in_motion desk)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b2 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-11-nd-16-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h front ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-12-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (in_motion desk)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-13-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?b2 front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-14-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (in_motion ?b4)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)





(define (game game-16-15-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin ?b1 ?b2 ?b3 ?b4 - block)
      (game-conserved
        (and
          (adjacent_side ?h front ?c back)
          (on floor ?b1)
          (adjacent_side ?h left ?b1)
          (on ?b1 ?b2)
          (on floor ?b3)
          (adjacent_side ?h right ?b3)
          (on ?b3 ?b4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference rollBallToBin
      (exists (?d - dodgeball ?r - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?r))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (on ?r ?d))
          (once (and (in ?h ?d) (not (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (count rollBallToBin)
)
)



(define (game game-17-0-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?p)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-1-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (agent_holds ?b)
            (on ?f ?t)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-2-nd-5-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?t)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count castleBuilt:cube_block_blue))
)
)





(define (game game-17-3-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (agent_holds ?c)
            (on ?f ?t)
            (on ?t ?b)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-4-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?l - laptop ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?c)
            (on ?f ?c)
            (on ?l ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-5-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - dodgeball ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?t)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-6-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (is_setup_object ?t)
            (on ?f ?t)
            (on ?t ?c)
            (on ?b ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-7-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?d - (either building golfball doggie_bed))
        (at-end
          (and
            (on ?d ?d)
            (on ?d ?d)
            (on ?d ?d)
            (on ?d ?d)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-8-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?h - (either dodgeball cd) ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?c ?f)
            (on ?f ?t)
            (on ?h ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-9-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?t)
            (on ?t ?c)
            (and
              (not
                (agent_holds ?f)
             )
              (and
                (not
                  (in_motion ?b)
               )
                (not
                  (on ?c ?p)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-10-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?h - beachball ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?t ?f)
            (on ?h ?t)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-11-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?b)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-12-nd-3-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?t)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* (count castleBuilt:yellow) (- (* 100 (count castleBuilt:dodgeball:desktop))
   )
 )
)
)





(define (game game-17-13-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?p)
            (on ?f ?t)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-14-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (in_motion ?f)
            (on ?b ?t)
            (on ?t ?c)
            (on ?c ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)





(define (game game-17-15-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference castleBuilt
      (exists (?b - bridge_block ?f - flat_block ?t - tall_cylindrical_block ?c - cube_block ?p - pyramid_block)
        (at-end
          (and
            (on ?b ?f)
            (on ?f ?t)
            (on ?t ?c)
            (agent_holds ?p)
         )
       )
     )
   )
 )
)
(:scoring
  (* 10 (count-once-per-objects castleBuilt))
)
)



(define (game game-19-0-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* (* (count-once-per-objects ballThrownOntoTarget:green) (count-once throwAttempt:dodgeball))
      2
      -30
   )
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-1-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (and (agent_holds ?b) (not (in ?b ?t)))) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-2-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:yellow:cube_block))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-3-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (+ 25 (external-forall-maximize (count throwAttempt:yellow)))
   )
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-4-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* (count-once-per-objects throwAttempt:cd))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-5-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects throwAttempt:tall_rectangular_block:golfball))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-6-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* -22 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-7-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:yellow))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-8-nd-7-rd-3-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt:tall_cylindrical_block) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-9-nd-24-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door south_wall) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-10-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 0.9)
 )
)
)





(define (game game-19-11-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?o - pillow)
        (then
          (once (agent_holds ?o))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (not (in_motion ?o)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-12-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects throwAttempt:tall_rectangular_block_green))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-13-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects throwAttempt:green))
 )
)
)





(define (game game-19-14-nd-13-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference smallObjectThrownToBed
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?t)))
            (once (not (agent_holds floor)))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (count-once-per-objects ballThrownIntoTarget:basketball:doggie_bed))
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)





(define (game game-19-15-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - ball)
      (game-optional
        (< (distance door ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?t - (either doggie_bed hexagonal_bin))
      (and
        (preference ballThrownIntoTarget
          (then
            (once (and (agent_holds ?b) (< (distance door agent) 1)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (and (in ?t ?b) (not (in_motion ?b))))
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballThrownOntoTarget
          (exists (?t - doggie_bed)
            (then
              (once (and (agent_holds ?b) (< (distance door agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (on ?t ?b) (not (in_motion ?b))))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt) 3)
)
(:scoring
  (+ (* 6 (count-once-per-objects ballThrownIntoTarget:dodgeball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:beachball:hexagonal_bin))
    (* 4 (count-once-per-objects ballThrownIntoTarget:basketball:hexagonal_bin))
    (* 5 (count-once-per-objects ballThrownIntoTarget:dodgeball:doggie_bed))
    (* 4 (count-once-per-objects ballThrownIntoTarget:beachball:doggie_bed))
    (* 3 (+ (count ballThrownIntoTarget:dodgeball) (external-forall-maximize (count-longest ballThrownIntoTarget:hexagonal_bin)))
   )
    (* 5 (count-once-per-objects ballThrownOntoTarget:dodgeball))
    (* 4 (count-once-per-objects ballThrownOntoTarget:beachball))
    (* 3 (count-once-per-objects ballThrownOntoTarget:basketball))
 )
)
)



(define (game game-20-0-nd-13-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (in_motion ?d))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-1-nd-15-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects towerFallsWhileBuilding:orange) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-2-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (on ?b ?d)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-3-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (agent_holds desk))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-4-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - flat_block ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-5-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (and (not (not (in ?l ?d))) (agent_holds ?b)))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-6-nd-13-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (+ (count blockInTowerKnockedByDodgeball:shelf:hexagonal_bin) 50)
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-7-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in floor ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-8-nd-9-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?h - hexagonal_bin ?t - alarm_clock ?b3 - cube_block)
            (then
              (once (agent_holds ?b3))
              (once (in_motion ?h))
              (hold (same_color room_center gray))
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-9-nd-11-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (< (distance_side bottom_shelf front ?b) (x_position ?l))
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-10-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-11-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d east_sliding_door))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-12-nd-13-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (not (in_motion ?b))))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-13-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 16 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-14-nd-7-rd-13-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (count blockInTowerAtEnd:red)) (- (count towerFallsWhileBuilding))
 )
)
)





(define (game game-20-15-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockInTowerAtEnd
          (exists (?l - block)
            (at-end
              (and
                (in ?b ?l)
             )
           )
         )
       )
        (preference blockInTowerKnockedByDodgeball
          (exists (?l - block ?d - dodgeball)
            (then
              (once (and (in ?b ?l) (agent_holds ?d)))
              (hold-while (and (in ?b ?l) (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?b))
              (hold (in_motion ?l))
              (once (not (in_motion ?l)))
           )
         )
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (touch ?l2 ?b))))
          (once (not (in_motion ?l1)))
       )
     )
   )
 )
)
(:scoring
  (+ (external-forall-maximize (+ (count-once-per-objects blockInTowerAtEnd) (* 2 (count-once-per-objects blockInTowerKnockedByDodgeball))
     )
   )
    (- (count towerFallsWhileBuilding))
 )
)
)



(define (game game-21-0-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?d)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-1-nd-10-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (+ (* (count ballThrownToChair:tall_cylindrical_block) (count ballThrownToBin:hexagonal_bin:golfball:pencil:tall_cylindrical_block))
        (+ (count ballThrownToBed:chair) (count ballThrownMissesEverything:red:pink:top_drawer))
     )
   )
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-2-nd-7-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?l2 - dodgeball_blue ?l1 - tall_cylindrical_block_tan)
      (game-conserved
        (and
          (< (distance room_center ?l2) 1)
          (not
            (faces ?l1 desk)
         )
          (not
            (faces ?l2 bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-3-nd-17-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c room_center)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-4-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk bed)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-5-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (and (agent_holds ?d) (in_motion ?d) (agent_holds ?d) (same_type ?d building)) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-6-nd-16-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance ?c ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-7-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (and (agent_holds ?d) (and (and (not (< (distance desk ?d) (distance ?d ?d))) (on ?d ?d) (not (adjacent ?d ?d))) (same_color door pink) (not (in_motion ?d)) (in_motion ?d)) (in ?d ?d))))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-8-nd-17-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c ?c)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-9-nd-7-rd-3-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownMissesEverything:tall_cylindrical_block:tall_cylindrical_block_green)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-10-nd-10-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (hold (opposite rug ?c))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-11-nd-11-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (on ?d ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-12-nd-10-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?h)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-13-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent bed agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-14-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?h) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)





(define (game game-21-15-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair)
      (game-conserved
        (and
          (< (distance room_center ?c) 1)
          (not
            (faces ?c desk)
         )
          (not
            (faces ?c bed)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (touch ?d desk)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference ballThrownToBed
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownToChair
      (exists (?d - dodgeball ?c - chair)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?c ?d) (is_setup_object ?c)))
       )
     )
   )
    (preference ballThrownMissesEverything
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (not (exists (?h - hexagonal_bin) (in ?h ?d))) (not (on bed ?d)) (not (exists (?c - chair) (and (on ?c ?d) (is_setup_object ?c))))))
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 10)
)
(:scoring
  (+ (* 5 (count ballThrownToBin))
    (count ballThrownToBed)
    (count ballThrownToChair)
    (- (count ballThrownMissesEverything))
 )
)
)



(define (game game-22-0-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in ?b floor)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-1-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:yellow))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-2-nd-11-rd-6-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?c - rug ?o4 - cube_block_blue ?h - south_wall)
          (adjacent ?c ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-3-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under room_center ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-4-nd-5-rd-1-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-5-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (same_color north_wall ?x)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-6-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (- 4)
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-7-nd-8-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?h - teddy_bear ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?h) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?h)) (in_motion ?h)))
              (once (and (not (in_motion ?h)) (in ?h ?h)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-8-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:desk:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-9-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (- (* 60 -6 2)
   )
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-10-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwAttempt:door))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-11-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count-once-per-objects throwAttempt:triangle_block_blue))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-12-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?h) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-13-nd-11-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (not (in_motion ?b)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-14-nd-17-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (and (agent_holds ?h) (on bed door)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 4 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)





(define (game game-22-15-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (adjacent bed ?h)
     )
   )
    (forall (?b - ball)
      (game-optional
        (on rug ?b)
     )
   )
    (game-optional
      (not
        (exists (?g - game_object)
          (on desk ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball ?x - (either red yellow pink))
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (and (agent_holds ?b) (on rug agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 8)
)
(:scoring
  (+ (* 2 (count throwBallToBin:dodgeball:red))
    (* 3 (count throwBallToBin:basketball:red))
    (* 4 (count throwBallToBin:beachball:red))
    (* 3 (count throwBallToBin:dodgeball:pink))
    (* 4 (count throwBallToBin:basketball:pink))
    (* 5 (count throwBallToBin:beachball:pink))
    (* 3 (count throwBallToBin:dodgeball:yellow))
    (* 5 (count throwBallToBin:basketball:yellow))
    (* 6 (count throwBallToBin:beachball:yellow))
 )
)
)



(define (game game-23-0-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (or (on desk ?d) (and (in_motion ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-1-nd-12-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt:yellow) 5))
 )
)
)





(define (game game-23-2-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?h))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (broken bed))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-3-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (not (not (not (agent_holds bed))))) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-4-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (agent_holds ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-5-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion floor) (agent_holds ?h)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-6-nd-6-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-longest throwAttempt:white) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-7-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (on ?d ?d))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-8-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (on ?d rug))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-9-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (equal_z_position ?d ?h)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-10-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-11-nd-6-rd-10-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (external-forall-minimize (<= (count-once throwBallToBin:dodgeball:purple) 2)
   )
 )
)
)





(define (game game-23-12-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?h)))
          (once (and (not (in_motion ?d)) (in_motion ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-13-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion top_shelf)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-14-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?c3 - tall_cylindrical_block_yellow)
        (then
          (once (agent_holds ?c3))
          (hold (and (not (agent_holds ?c3)) (in_motion ?c3)))
          (once (not (in_motion ?c3)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)





(define (game game-23-15-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - cellphone)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToBin) (- (/ (count throwAttempt) 5))
 )
)
)



(define (game game-24-0-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on ?h ?d) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-1-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (not (and (and (in_motion ?h) (in_motion ?d)) (forall (?l2 - bed ?t - cylindrical_block) (< (distance ?d desk) (distance bed ?d))))) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-2-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug door) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-3-nd-10-rd-13-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (in_motion ?h))
              (hold-while (agent_holds ?h) (in agent ?h))
              (once (not (< (distance ?h ?d) 1)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-4-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (count throwBallToBin:cd:brown)
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-5-nd-15-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (not (between ?h ?h door)) (not (exists (?l1 - wall ?c4 ?w1 ?db ?e ?g ?c - top_shelf) (agent_holds ?e))) (in ?h ?d)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-6-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* (count-once-per-objects throwBallToBin:north_wall:blue) (count throwBallToBin:desk))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-7-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:watch))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-8-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* -6 5)
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-9-nd-12-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (same_color ?h ?x) (same_color desk pink)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-10-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* (* (count-increasing-measure throwBallToBin:mug:brown) (count-once-per-objects throwBallToBin:hexagonal_bin))
      -2
      -40
      (+ 0 (count throwBallToBin:pen:pink) -17)
   )
 )
)
)





(define (game game-24-11-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion top_shelf)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-12-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 40 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-13-nd-3-rd-3-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (<= (total-time) 270)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-14-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?g - hexagonal_bin ?h - hexagonal_bin)
      (game-conserved
        (on ?g ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)





(define (game game-24-15-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - block ?h - hexagonal_bin)
      (game-conserved
        (on ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball ?x - color)
      (and
        (preference throwBallToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (on rug agent) (rug_color_under agent ?x)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 300)
)
(:scoring
  (+ (* 5 (count throwBallToBin:dodgeball_blue:red))
    (* 10 (count throwBallToBin:dodgeball_pink:red))
    (* 10 (count throwBallToBin:dodgeball_blue:pink))
    (* 20 (count throwBallToBin:dodgeball_pink:pink))
    (* 15 (count throwBallToBin:dodgeball_blue:orange))
    (* 30 (count throwBallToBin:dodgeball_pink:orange))
    (* 15 (count throwBallToBin:dodgeball_blue:green))
    (* 30 (count throwBallToBin:dodgeball_pink:green))
    (* 20 (count throwBallToBin:dodgeball_blue:purple))
    (* 40 (count throwBallToBin:dodgeball_pink:purple))
    (* 20 (count throwBallToBin:dodgeball_blue:yellow))
    (* 40 (count throwBallToBin:dodgeball_pink:yellow))
 )
)
)



(define (game game-27-0-nd-15-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (in_motion ?s)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-1-nd-6-rd-12-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?g - game_object)
        (then
          (hold (not (<= 4 (distance ?g ?g))))
          (once (adjacent top_shelf ?g))
          (once (< (distance ?g main_light_switch) (distance ?g ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-2-nd-9-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - desktop)
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-3-nd-11-rd-3-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count dodgeballsInPlace:block))
 )
)
)





(define (game game-27-4-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch beachball laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-5-nd-11-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either cube_block shelf lamp))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-6-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (not
              (not
                (broken ?o)
             )
           )
            (between ?d ?o door)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-7-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* (* (* (external-forall-maximize (count laptopAndBookInPlace:credit_card)) (count dodgeballsInPlace:beachball:block))
        (count blocksInPlace:tall_rectangular_block)
     )
      (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-8-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?o ?d)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-9-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - chair)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-10-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - flat_block)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-11-nd-8-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?tb - laptop ?x ?x0 - (either blue))
        (at-end
          (and
            (not
              (toggled_on ?tb)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-12-nd-7-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - wall)
        (at-end
          (in east_sliding_door ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-13-nd-10-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - block)
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-14-nd-15-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s ?o)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* 3 (count-once-per-objects itemsTurnedOff))
 )
)
)





(define (game game-27-15-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?d - (either dodgeball cube_block))
      (game-optional
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
    (game-optional
      (toggled_on main_light_switch)
   )
    (forall (?e - desktop)
      (game-optional
        (toggled_on ?e)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (at-end
          (in ?h ?d)
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (and
            (adjacent ?s west_wall)
            (on ?s ?c)
         )
       )
     )
   )
    (preference laptopAndBookInPlace
      (exists (?o - (either laptop book) ?s - shelf)
        (at-end
          (and
            (adjacent ?s south_wall)
            (on ?s ?o)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch desktop laptop))
        (at-end
          (and
            (not
              (toggled_on ?o)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (+ (count-once-per-objects dodgeballsInPlace) (count-once-per-objects blocksInPlace) (count-once-per-objects laptopAndBookInPlace) (count-once-per-objects smallItemsInPlace))
   )
    (* (external-forall-maximize (* (count dodgeballsInPlace:chair) -9)
     )
      (count-once-per-objects itemsTurnedOff)
   )
 )
)
)



(define (game game-28-0-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (same_object ?d ?b)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-1-nd-12-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on bottom_shelf ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-2-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on desk agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-3-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (external-forall-maximize
      (* (= (count thrownBallReachesEnd:ball:cube_block_yellow) (count-overlapping thrownBallHitsBlock:cube_block))
        (count thrownBallHitsBlock:blue)
     )
   )
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-4-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (in top_shelf ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-5-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on floor ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-6-nd-15-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (agent_holds ?d)) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-7-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (in_motion ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-8-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 21 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-9-nd-15-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:purple))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-10-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (and (forall (?w - bridge_block_pink ?h - tall_cylindrical_block_yellow ?b8 - flat_block_yellow) (agent_holds ?b8))) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-11-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on ?d agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-12-nd-7-rd-2-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 240)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-13-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:white))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-14-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (count thrownBallHitsBlock:agent)
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (count thrownBallHitsBlock:pink))
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)





(define (game game-28-15-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - cube_block)
      (game-conserved
        (on rug ?c)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference thrownBallHitsBlock
          (exists (?d - dodgeball ?b - cube_block)
            (then
              (once (and (agent_holds ?d) (not (on rug agent))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (on rug ?b) (touch ?b ?d) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
    (preference thrownBallReachesEnd
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d) (not (exists (?b - cube_block) (touch ?d ?b)))) (above rug ?d))
          (once (or (touch ?d bed) (touch ?d west_wall)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count thrownBallReachesEnd))
    (* -5 (count thrownBallHitsBlock:red))
    (* -3 (count thrownBallHitsBlock:green))
    (* -3 (+ (* (count thrownBallHitsBlock:pink) -10)
        3
     )
   )
    (- (count thrownBallHitsBlock:yellow))
    (- (count thrownBallHitsBlock:purple))
 )
)
)



(define (game game-29-0-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (same_type ?g pillow)
           )
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed:gray:pink)
)
)





(define (game game-29-1-nd-12-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (on ?g ?g)
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-2-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?d - dodgeball)
        (at-end
          (and
            (not
              (same_type ?d pillow)
           )
            (on bed ?d)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-3-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?h - game_object)
        (at-end
          (and
            (not
              (same_type ?h pillow)
           )
            (on bed ?h)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-4-nd-8-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (in ?g ?g)
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-5-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (touch ?g ?g)
           )
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-6-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?b3 ?s - mug)
        (at-end
          (and
            (not
              (same_type ?b3 pillow)
           )
            (on bed ?s)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-7-nd-16-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (same_type ?g pillow)
           )
            (on agent ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-8-nd-5-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (same_type ?g pillow)
           )
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed:cube_block_yellow)
)
)





(define (game game-29-9-nd-12-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (same_type ?g pillow)
           )
            (agent_holds ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-10-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (same_type ?g ?g)
           )
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-11-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (open ?g)
           )
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-12-nd-5-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (same_type ?g pillow)
           )
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed:alarm_clock)
)
)





(define (game game-29-13-nd-9-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (agent_holds ?g)
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-14-nd-14-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (and
                (not
                  (not
                    (above ?g ?g)
                 )
               )
                (in_motion ?g)
             )
           )
            (on bed ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)





(define (game game-29-15-nd-10-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference objectOnBed
      (exists (?g - game_object)
        (at-end
          (and
            (in_motion east_wall)
            (= 4 0.7)
         )
       )
     )
   )
 )
)
(:scoring
  (count objectOnBed)
)
)



(define (game game-31-0-nd-13-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (not
            (in_motion ?o)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-1-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - cube_block)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-2-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?h)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-3-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b7 - cube_block_yellow)
      (game-conserved
        (and
          (adjacent desk ?b7)
          (forall (?b - cube_block)
            (adjacent ?b7 ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-4-nd-15-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?o ?l4 - (either flat_block_gray beachball))
            (adjacent ?h ?o)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-5-nd-16-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock drawer mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-6-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (not (agent_holds ?o)))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-7-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either pillow side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-8-nd-16-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book blinds) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-9-nd-21-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds mirror)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-10-nd-8-rd-15-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - wall)
            (at-end
              (and
                (on ?o ?s)
                (and
                  (on ?o ?s)
                  (touch ?o ?s)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-11-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (adjacent agent ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-12-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - ball)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-13-nd-10-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - shelf)
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-14-nd-12-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?o) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:agent) (* 2 (count objectThrownFromRug:bed))
 )
)
)





(define (game game-31-15-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent desk ?h)
          (forall (?b - cube_block)
            (adjacent ?h ?b)
         )
       )
     )
   )
    (forall (?o - (either alarm_clock cellphone mug key_chain cd book ball))
      (game-optional
        (or
          (on side_table ?o)
          (on bed ?o)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?s - (either bed side_table))
      (and
        (preference objectThrownFromRug
          (exists (?o - (either alarm_clock cellphone mug key_chain cd book ball) ?h - hexagonal_bin)
            (then
              (once (on ?s ?o))
              (hold (and (agent_holds ?s) (on rug agent)))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count objectThrownFromRug:side_table) (* 2 (count objectThrownFromRug:bed))
 )
)
)



(define (game game-32-0-nd-12-rd-1-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count ballNeverThrown:cube_block) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-1-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (and (not (in_motion ?b)) (in_motion ?b))))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-2-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in_motion room_center)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-3-nd-9-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - beachball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-4-nd-23-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (agent_holds desk)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-5-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on ?b2 ?b6)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-6-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on rug ?c) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-7-nd-11-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once throwAttempt:cylindrical_block) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-8-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?c) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-9-nd-13-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block top_drawer pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-10-nd-21-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (on floor ?h)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-11-nd-16-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on door ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-12-nd-11-rd-2-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt:desktop) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-13-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (and (in_motion ?b) (not (not (same_object ?b west_wall))))))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-14-nd-15-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (in_motion ?c)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (adjacent ?b ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)





(define (game game-32-15-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - (either cube_block cylindrical_block pyramid_block))
      (game-optional
        (and
          (on desk ?b1)
          (on desk ?b2)
          (on desk ?b3)
          (on ?b1 ?b4)
          (on ?b2 ?b5)
          (on ?b4 ?b6)
       )
     )
   )
    (exists (?w1 ?w2 - wall ?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent ?h ?w1)
          (adjacent ?h ?w2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference blockInTowerKnocked
          (exists (?bl - building ?c - (either cube_block cylindrical_block pyramid_block))
            (then
              (once (and (agent_holds ?b) (on desk ?bl) (in ?bl ?c)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b) (not (or (agent_holds ?c) (touch agent ?c)))) (in_motion ?c))
              (once (not (agent_holds ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
        (preference ballNeverThrown
          (then
            (once (game_start))
            (hold (not (agent_holds ?b)))
            (once (game_over))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 2)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (* (>= (+ (count ballThrownToBin:dodgeball) (* 2 (count ballThrownToBin:golfball))
     )
      2
   )
    (+ (count-once-per-objects blockInTowerKnocked) (count-once-per-objects ballNeverThrown:golfball) (* 2 (count-once-per-objects ballNeverThrown:dodgeball))
   )
 )
)
)



(define (game game-33-0-nd-14-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in ?g top_shelf)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-1-nd-10-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (adjacent ?g ?g)
            (in_motion ?g)
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-2-nd-8-rd-9-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (agent_holds ?g)
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-3-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd:east_sliding_door)
)
)





(define (game game-33-4-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - lamp)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-5-nd-8-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (in_motion ?g)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-6-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (in_motion ?g)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-7-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - cylindrical_block)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-8-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - bridge_block_tan)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-9-nd-14-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in ?g room_center)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-10-nd-15-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in ?g ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-11-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in ?g ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-12-nd-12-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (not
              (in_motion ?g)
           )
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-13-nd-3-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once itemInClosedDrawerAtEnd:doggie_bed:flat_block)
)
)





(define (game game-33-14-nd-14-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - game_object)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (not
                (in_motion bottom_drawer)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)





(define (game game-33-15-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?g - game_object)
      (game-optional
        (not
          (in top_drawer ?g)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference itemInClosedDrawerAtEnd
      (exists (?g - bridge_block)
        (at-end
          (and
            (in top_drawer ?g)
            (not
              (open top_drawer)
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects itemInClosedDrawerAtEnd)
)
)



(define (game game-35-0-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 0.5 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-1-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (on bed ?h))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-2-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-3-nd-23-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?d - teddy_bear) (touch ?b ?d)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-4-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?h))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-5-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (hold (and (on ?g ?h) (in_motion ?h)))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-6-nd-9-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - room_center)
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-7-nd-13-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (not (agent_holds ?b)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-8-nd-8-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - (either block) ?b - cube_block)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?b ?d))
          (once (and (not (in_motion ?d)) (in ?b ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-9-nd-10-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?c1 - cylindrical_block_tan)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?c1 ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-10-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (agent_holds bed)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-11-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (above ?h ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-12-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold (in_motion ?g))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-13-nd-22-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (in_motion agent)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-14-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (equal_z_position ?h ?g)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)





(define (game game-35-15-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either book dodgeball))
      (and
        (preference throwObjectToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?g - (either game_object floor wall)) (touch ?g ?b)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (preference throwBallToBinOffObject
      (exists (?d - dodgeball ?h - hexagonal_bin ?g - (either game_object floor wall))
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?g ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwMissesBin
      (exists (?b - hexagonal_bin ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (not (in ?h ?b))))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 10)
    (<= (total-score) -30)
 )
)
(:scoring
  (+ (count throwObjectToBin:dodgeball) (* 10 (count-once throwObjectToBin:book))
    (* 2 (count throwBallToBinOffObject))
    (- (count throwMissesBin))
 )
)
)



(define (game game-36-0-nd-11-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (in_motion ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-1-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (and (not (and (not (not (on ?h ?d))) (not (agent_holds ?d)))) (and (in ?h ?d) (is_setup_object ?h))) (broken ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-2-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - drawer)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-3-nd-6-rd-4-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (* (count-once-per-objects throwAttempt:key_chain) (count-once-per-objects throwAttempt:pyramid_block) (count throwToBin:pink))
    5
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-4-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-5-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (once (adjacent ?d ?h))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-6-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (in_motion desk))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-7-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (above ?d ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-8-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in desk ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-9-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (in_motion ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-10-nd-12-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (on ?h ?d) (and (not (in_motion ?d)) (agent_holds floor) (agent_holds ?h))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-11-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?b - ramp)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?b ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-12-nd-3-rd-7-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (> 60 23)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-13-nd-7-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?l - hexagonal_bin)
      (game-conserved
        (on bed ?l)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-14-nd-5-rd-1-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 25)
)
(:scoring
  (count throwToBin)
)
)





(define (game game-36-15-nd-7-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?b ?d ?p1 ?c6 ?o1 ?l3 - cube_block_blue ?r - (either cube_block triangle_block_tan hexagonal_bin))
      (game-conserved
        (on bed ?d)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count throwToBin)
)
)



(define (game game-37-0-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (and (agent_holds ?w2) (in ?w2 ?d)) (in_motion ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-1-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (and (not (faces ?w2 ?h)) (agent_holds ?h) (not (and (in_motion desk) (touch ?w1 ?w2))))) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-2-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?w2)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-3-nd-4-rd-6-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (<= (count-once-per-objects throwAttempt:beachball) 18)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-4-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (agent_holds ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-5-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?b4 - pyramid_block_yellow ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?b4) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?b4)) (in_motion ?b4)))
          (once (and (not (in_motion ?b4)) (in ?h ?b4)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-6-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?w1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-7-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (touch ?d desk) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-8-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?d ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-9-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - lamp ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-10-nd-17-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent ?w1 ?d) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-11-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?d ?h)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-12-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - book)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-13-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - basketball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)





(define (game game-37-14-nd-3-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (count-once-per-objects throwAttempt:hexagonal_bin)
)
)





(define (game game-37-15-nd-9-rd-1-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromOppositeWall
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (then
          (once (and (agent_holds ?d) (adjacent agent ?w1) (opposite ?w1 ?w2) (adjacent ?h ?w2)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwToBinFromOppositeWall:bridge_block_tan) 10)
)
(:scoring
  (count throwToBinFromOppositeWall)
)
)



(define (game game-38-0-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk bed)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-1-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (on ?h ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-2-nd-3-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* (count-overlapping throwToBin:desktop:game_object:gray) (* (count-once-per-objects throwToBin:bed:drawer) -3)
 )
)
)





(define (game game-38-3-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (broken ?h))
          (hold (object_orientation ?d upside_down))
          (hold (in ?d ?h))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-4-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (in ?h ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-5-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - ball)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-6-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (on ?d ?h))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-7-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on ?d ?h)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-8-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk room_center)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-9-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (on ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-10-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (in_motion ?h))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-11-nd-5-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* (* (count-once-per-objects throwToBin:pyramid_block) (count-once-per-objects throwToBin:brown) 20 (count-once-per-external-objects throwToBin:blue))
    (count throwToBin)
 )
)
)





(define (game game-38-12-nd-13-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (not (faces ?d ?h)) (and (in_motion ?d) (on ?h ?d))))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-13-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?h) (adjacent desk agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (agent_holds ?d) (not (in bed east_sliding_door))))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-14-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (same_type ?h ball) (in ?h ?d)))
          (hold (agent_holds ?h))
          (hold (agent_holds ?d))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)





(define (game game-38-15-nd-13-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (in_motion ?d) (agent_holds ?h) (agent_holds ?h) (in_motion ?d)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (* 5 (count throwToBin))
)
)



(define (game game-39-0-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (agent_holds ?w) (same_color ?w purple)) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-1-nd-15-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?w))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-2-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?w ?b))
          (once (or (in_motion ?w) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-3-nd-10-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?w ?b))
          (once (on ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-4-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (and (agent_holds ?w) (exists (?l3 - (either laptop rug)) (in_motion ?w)) (touch agent ?b)))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-5-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (< (building_size ?w) 4)) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-6-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?g - room_center)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?g ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-7-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (and (not (in_motion ?b)) (not (agent_holds ?b))) (not (in north_wall ?w))) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-8-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?w)) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-9-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?c - dodgeball ?w - wall)
        (then
          (once (agent_holds ?c))
          (hold-while (and (not (agent_holds ?c)) (in_motion ?c)) (touch ?w ?c))
          (once (or (agent_holds ?c) (touch agent ?c)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-10-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?w ?b))
          (once (or (and (< 1 (distance ?w ?b)) (agent_holds ?b) (in_motion ?w)) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-11-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?w ?b))
          (once (or (agent_holds ?b) (in_motion ?w)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-12-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (agent_holds ?b) (in_motion ?b)) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-13-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (game_start)) (in_motion ?b)) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-14-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (< (distance ?b ?w) (distance agent ?w))) (touch ?w ?b))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)





(define (game game-39-15-nd-15-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToWallToAgent
      (exists (?b - ball ?w - wall)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch door ?w))
          (once (or (agent_holds ?b) (touch agent ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownToWallToAgent)
)
)



(define (game game-40-0-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:pink))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-1-nd-13-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r top_shelf)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-2-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:triangle_block))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-3-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (* (count ballRolledOnRampToRug:pillow:triangular_ramp) -40)
   )
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-4-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:hexagonal_bin:agent))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-5-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 0.2)
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-6-nd-13-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (and (and (< (distance ?r ?b) (distance ?b ?r)) (in_motion ?b)) (not (on ?r ?b)) (not (not (exists (?h - block) (in_motion ?b))))))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-7-nd-10-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (agent_holds ?r)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-8-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (count-once-per-objects ballRolledOnRampToRug:cd) (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-9-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:cellphone))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-10-nd-13-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (exists (?s - pen) (on rug ?r)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-11-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (- 5)
   )
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-12-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (+ (count-once-per-objects ballRolledOnRampToRug:pillow) (+ (count-once-per-objects ballRolledOnRampToRug:wall:curved_wooden_ramp) (count ballRolledOnRampToRug:wall))
        90
        4
     )
   )
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-13-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange:lamp))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-14-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - shelf_desk ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:purple))
    (- (count ballRolledOnRampToRug:white))
 )
)
)





(define (game game-40-15-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (adjacent ?r rug)
     )
   )
 )
)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference ballRolledOnRampToRug
          (exists (?b - beachball ?r - curved_wooden_ramp)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballRolledOnRampToRug:pink) (* 2 (count ballRolledOnRampToRug:yellow))
    (* 3 (count ballRolledOnRampToRug:orange))
    (* 3 (count ballRolledOnRampToRug:green))
    (* 4 (count ballRolledOnRampToRug:yellow))
    (- (count ballRolledOnRampToRug:white))
 )
)
)



(define (game game-41-0-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?bl - chair)
          (game-optional
            (or
              (same_type ?w2 bridge_block)
              (> (distance ?w1 ?w2) (distance ?bl ?w2))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-1-nd-10-rd-14-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (in_motion ?w2))))
              (once (rug_color_under east_sliding_door red))
              (once (adjacent_side ?g right ?w1))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-2-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (in_motion ?w2)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-3-nd-12-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?b - side_table ?o - chair)
          (game-optional
            (or
              (same_type ?b bridge_block)
              (> (distance ?w1 ?o) (distance ?w2 ?o))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-4-nd-23-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance floor ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-5-nd-3-rd-3-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (> -16 6)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-6-nd-23-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?w2) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-7-nd-20-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (in_motion ?w2)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-8-nd-21-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g cube_block_blue)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-9-nd-19-rd-4-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (is_setup_object agent)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-10-nd-21-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g dodgeball)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-11-nd-21-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w2 room_center) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-12-nd-11-rd-14-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?d - cylindrical_block)
          (forall (?b - dodgeball)
            (game-optional
              (in ?b ?d)
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-13-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?e - wall)
      (and
        (game-conserved
          (opposite ?e ?e)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?e ?b) (distance ?e ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?e ?g) (distance ?e ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-14-nd-19-rd-6-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (< (distance ?w2 ?b) (distance ?w1 ?w2))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (hold (or (agent_holds ?g) (in_motion ?g)))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)





(define (game game-41-15-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 ?w2 - wall)
      (and
        (game-conserved
          (opposite ?w1 ?w2)
       )
        (forall (?b - bridge_block)
          (game-conserved
            (and
              (on floor ?b)
              (= (distance ?w1 ?b) (distance ?w2 ?b))
           )
         )
       )
        (forall (?g - game_object)
          (game-optional
            (or
              (same_type ?g bridge_block)
              (> (distance ?w1 ?g) (distance ?w2 ?g))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?w1 ?w2 - wall)
      (and
        (preference objectMovedRoomSide
          (exists (?g - game_object)
            (then
              (once (and (not (agent_holds ?g)) (not (in_motion ?g)) (not (same_type ?g bridge_block)) (> (distance ?w1 ?g) (distance ?w2 ?g))))
              (once (equal_z_position ?g ?w1))
              (once (and (not (in_motion ?g)) (< (distance ?w1 ?g) (distance ?w2 ?g))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (external-forall-maximize
    (count-once-per-objects objectMovedRoomSide)
 )
)
)



(define (game 5edc195a95d5090e1c3f91b-42-0-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion bed)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-1-nd-20-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (< (distance_side ?d front ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-2-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?h)))
          (once (and (in_motion ?d1) (agent_holds desk)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-3-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (not (agent_holds ?d2)) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-4-nd-19-rd-6-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (building_size ?h) (distance ?d ?h))
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-5-nd-6-rd-19-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - dodgeball)
      (and
        (game-optional
          (in_motion bottom_drawer)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-6-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (faces ?d ?d) (in_motion ?d) (not (exists (?o - side_table) (agent_holds agent)))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-7-nd-22-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 1)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-8-nd-21-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?d ?h) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-9-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (touch ?d2 ?h))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-10-nd-15-rd-10-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (not
              (not
                (agent_holds ?h)
             )
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-11-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?l3 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?l3) (adjacent ?l3 agent)))
          (hold (and (not (agent_holds ?l3)) (in_motion ?l3)))
          (once (and (not (in_motion ?l3)) (in ?h ?l3)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-12-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - top_shelf)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-13-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in bed ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-14-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (> (distance ?h ?d) 2)
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (hold (on ?h side_table))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)





(define (game 5edc195a95d5090e1c3f91b-42-15-nd-20-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (and
        (forall (?g - game_object)
          (game-optional
            (or
              (same_object ?h ?g)
              (> (distance ?h ?g) 1)
           )
         )
       )
        (forall (?d - dodgeball)
          (game-optional
            (and
              (= 2 (distance ?h ?d))
              (< (distance ?h ?d) 6)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwBallFromOtherBallToBin
      (exists (?d1 ?d2 - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d1) (adjacent ?d2 agent)))
          (hold (and (not (agent_holds ?d1)) (in_motion ?d1)))
          (once (and (not (in_motion ?d1)) (in ?h ?d1)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 5)
)
(:scoring
  (count-same-positions throwBallFromOtherBallToBin)
)
)



(define (game game-43-0-nd-8-rd-10-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (agent_crouches)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-1-nd-23-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?w)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-2-nd-11-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:door) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-3-nd-9-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - doggie_bed)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-4-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 5)
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-5-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (in_motion ?d)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-6-nd-18-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (in_motion ?b) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-7-nd-10-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - top_shelf)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-8-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:triangular_ramp))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-9-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:golfball_white))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-10-nd-18-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (and (not (not (agent_holds ?d))) (and (on ?d west_sliding_door) (agent_holds ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-11-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBed:door))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-12-nd-19-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (in_motion ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-13-nd-20-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (not (agent_holds ?b))) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-14-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (* (external-forall-maximize (count throwBallToDoggieBedOffWall:purple)) (count-same-positions throwBallToDoggieBed:desktop) (count throwBallToDoggieBed:dodgeball:alarm_clock) (count-once-per-objects throwBallToDoggieBedOffWall:brown:golfball))
   )
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:dodgeball))
 )
)
)





(define (game game-43-15-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference throwBallToDoggieBed
          (exists (?d - doggie_bed)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b) (not (exists (?w - wall) (touch ?w ?b)))))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
        (preference throwBallToDoggieBedOffWall
          (exists (?d - doggie_bed ?w - wall)
            (then
              (once (agent_holds ?b))
              (hold-while (and (not (agent_holds ?d)) (in_motion ?b)) (touch ?w ?b))
              (once (and (not (in_motion ?b)) (on ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count throwBallToDoggieBed:basketball) (* 2 (count throwBallToDoggieBed:beachball))
    (* 3 (count throwBallToDoggieBed:dodgeball))
    (* 2 (count throwBallToDoggieBedOffWall:basketball))
    (* 3 (count throwBallToDoggieBedOffWall:beachball))
    (* 4 (count throwBallToDoggieBedOffWall:hexagonal_bin))
 )
)
)



(define (game game-45-0-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (same_type bed ?s))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-1-nd-9-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:brown) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-2-nd-16-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on ?t1 ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-3-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s rug) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-4-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (+ (count throwAttempt:orange:yellow) (count-once-per-objects throwKnocksOverBear:basketball:doggie_bed))
 )
)
)





(define (game game-45-5-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (not (agent_holds ?s)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-6-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?s)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-7-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on desk ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-8-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (and (and (is_setup_object ?b) (and (agent_holds mirror) (in_motion bed))) (on ?s ?b) (not (in_motion ?s))) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-9-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 0.4 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-10-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?t ?s))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-11-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball cube_block))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-12-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (agent_holds ?b))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-13-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (agent_holds ?b)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-14-nd-18-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position bed ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (and (in_motion ?s) (in_motion ?t) (not (not (toggled_on ?s))) (agent_holds ?s))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)





(define (game game-45-15-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t1 ?t2 - teddy_bear)
      (game-optional
        (and
          (on floor ?t1)
          (on bed ?t2)
          (equal_z_position ?t1 ?t2)
          (equal_z_position desk ?t1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball))
      (and
        (preference throwKnocksOverBear
          (exists (?t - teddy_bear ?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent) (equal_z_position bed ?t)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
              (once (in_motion ?t))
           )
         )
       )
        (preference throwAttempt
          (exists (?s - sliding_door)
            (then
              (once (and (agent_holds ?b) (adjacent desk agent) (adjacent ?s agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects throwKnocksOverBear:dodgeball) (* 2 (count-once-per-objects throwKnocksOverBear:golfball))
 )
)
)



(define (game game-46-0-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on ?c ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-1-nd-12-rd-6-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< 10 0.7)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-2-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (hold (and (or (in ?d ?c) (broken ?d)) (not (and (on ?d ?c) (touch ?d ?c)))))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-3-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (and (rug_color_under ?d yellow) (< (distance ?d ?c) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-4-nd-10-rd-3-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count-once ballThrownHitsAgent))
 )
)
)





(define (game game-46-5-nd-10-rd-8-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (in_motion ?c)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-6-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (equal_x_position ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-7-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?g - wall ?d - game_object)
        (then
          (once (and (agent_holds ?d) (faces agent ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?g))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-8-nd-16-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch door ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-9-nd-9-rd-9-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (forall (?t2 - (either golfball east_sliding_door game_object))
          (not
            (and
              (not
                (in_motion ?t2)
             )
              (object_orientation ?t2 sideways)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-10-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (agent_holds ?c))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-11-nd-7-rd-14-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?t - hexagonal_bin)
        (at-end
          (not
            (agent_holds ?t)
         )
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-12-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (and (in_motion ?d) (in_motion ?c))) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-13-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?c))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-14-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (< 1 (distance ?d ?c)) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)





(define (game game-46-15-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp)
      (game-conserved
        (< (distance room_center ?c) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownToRampToBed
      (exists (?d - block ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (on bed ?d)))
       )
     )
   )
    (preference ballThrownHitsAgent
      (exists (?d - dodgeball_pink ?c - curved_wooden_ramp)
        (then
          (once (and (agent_holds ?d) (faces agent ?c)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c))
          (once (and (touch ?d agent) (not (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownToRampToBed) (- (count ballThrownHitsAgent))
 )
)
)



(define (game game-47-0-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (count beachballBouncedOffRamp:pillow:pink) (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-1-nd-12-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:blue) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-2-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (+ (count-once-per-objects beachballBouncedOffRamp:yellow) (count-once-per-objects beachballBouncedOffRamp:yellow:red))
 )
)
)





(define (game game-47-3-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count-once-per-external-objects beachballBouncedOffRamp:pyramid_block))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-4-nd-12-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:orange) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-5-nd-22-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on desk agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-6-nd-17-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (or (agent_holds floor) (and (on room_center ?b) (not (on ?r ?b)) (and (in_motion ?b) (same_object ?r rug))))))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-7-nd-18-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (agent_holds ?b)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-8-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (- (count beachballBouncedOffRamp:beachball:triangle_block_blue))
   )
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-9-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:green))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-10-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (is_setup_object bed)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-11-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:dodgeball))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-12-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:yellow))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-13-nd-22-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on agent agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-14-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?r))
              (once (and (adjacent ?b ?r) (is_setup_object ?r)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)





(define (game game-47-15-nd-12-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference beachballBouncedOffRamp
          (exists (?b - beachball ?r - triangular_ramp_green)
            (then
              (once (and (agent_holds ?b) (not (on rug agent)) (faces agent ?r)))
              (hold (in_motion ?r))
              (once (and (not (in_motion ?b)) (on rug ?b) (rug_color_under ?b ?x)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballBouncedOffRamp:red) (* 3 (count beachballBouncedOffRamp:pink))
    (* 10 (count beachballBouncedOffRamp:green))
 )
)
)



(define (game game-48-0-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop east_wall) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-1-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* (count blindsOpened:ball) (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-2-nd-11-rd-3-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-same-positions objectMoved:cylindrical_block_green))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-3-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:chair))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-4-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - hexagonal_bin ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-5-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 10)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-6-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (+ 50 (count itemsHidingScreens:pyramid_block:hexagonal_bin))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-7-nd-6-rd-8-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* -24 (+ (count-total blindsOpened:game_object) (* (count objectMoved:brown) (count-overlapping itemsHidingScreens:building) (count blindsOpened:cube_block:brown) (count-shortest itemsHidingScreens:hexagonal_bin:yellow))
     )
      (count-once-per-external-objects objectsHidden:east_wall)
      (* (count blindsOpened:dodgeball) (count-measure itemsHidingScreens:orange:cylindrical_block) 30 100)
   )
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-8-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 6 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-9-nd-5-rd-9-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (count-total itemsHidingScreens:tan)
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-10-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - cube_block)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-11-nd-12-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either pillow beachball) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-12-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?w - chair ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?h ?w)
          (>= (building_size ?h) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?h ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?h) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-13-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance room_center ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either basketball doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-14-nd-16-rd-5-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance agent ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)





(define (game game-48-15-nd-17-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - building ?h - hexagonal_bin)
      (game-conserved
        (and
          (in ?b ?h)
          (>= (building_size ?b) 4)
          (not
            (exists (?g - game_object)
              (and
                (in ?b ?g)
                (on ?h ?g)
             )
           )
         )
          (< (distance ?h ?b) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - (either dodgeball basketball beachball))
      (and
        (preference ballThrownToBin
          (exists (?b - building ?h - hexagonal_bin)
            (then
              (once (agent_holds ?d))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d)) (or (in ?b ?h) (on ?b ?h))))
           )
         )
       )
     )
   )
    (preference itemsHidingScreens
      (exists (?s - (either desktop laptop) ?o - (either pillow doggie_bed teddy_bear))
        (at-end
          (on ?s ?o)
       )
     )
   )
    (preference objectsHidden
      (exists (?o - (either alarm_clock cellphone) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference blindsOpened
      (exists (?b - blinds)
        (at-end
          (open ?b)
       )
     )
   )
    (preference objectMoved
      (exists (?g - game_object)
        (then
          (once (and (not (in_motion ?g)) (not (same_type ?g ball)) (not (same_type ?g drawer)) (not (same_type ?g blinds))))
          (hold (in_motion ?g))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count ballThrownToBin:dodgeball))
    (* 7 (count ballThrownToBin:basketball))
    (* 15 (count ballThrownToBin:beachball))
    (* 10 (count-once-per-objects itemsHidingScreens))
    (* 10 (count-once-per-objects objectsHidden))
    (* 10 (count-once-per-objects blindsOpened))
    (* -5 (count objectMoved))
 )
)
)



(define (game game-49-0-nd-6-rd-7-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (<= (count-once-per-objects dodgeballThrownToBin:cellphone:building:hexagonal_bin) 1)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-1-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds floor)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-2-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (on ?d ?g))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-3-nd-21-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door ?g) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-4-nd-9-rd-10-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-conserved
          (on ?g bed)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-5-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (and (equal_x_position ?h desk) (agent_holds bed))))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-6-nd-8-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?h)))
              (hold (and (in_motion ?h) (not (agent_holds ?h))))
              (once (and (not (in_motion ?h)) (in ?c ?h)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?c)))
              (hold (and (in_motion ?c) (not (agent_holds ?c))))
              (once (not (in_motion ?c)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-7-nd-15-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (opposite agent ?d) (in_motion ?h)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-8-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?d bed) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-9-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (not (not (in_motion ?h)))))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-10-nd-7-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-same-positions dodgeballThrownToBin:rug))
)
)





(define (game game-49-11-nd-12-rd-1-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor:basketball) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-12-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (in_motion ?d) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-13-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?b - blinds)
            (then
              (once (and (adjacent ?d agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-14-nd-11-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?w1 - curved_wooden_ramp)
        (game-optional
          (< (distance ?w1 ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)





(define (game game-49-15-nd-15-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (exists (?g - golfball_green)
    (and
      (game-conserved
        (< (distance door ?g) 0.5)
     )
      (forall (?d - dodgeball)
        (game-optional
          (< (distance ?d ?g) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - dodgeball)
      (and
        (preference dodgeballThrownToBin
          (exists (?h - hexagonal_bin ?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (same_type ?h ?g)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (exists (?g - golfball_green)
            (then
              (once (and (adjacent ?g agent) (adjacent door agent) (agent_holds ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (not (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttemptFromDoor)) 1)
    (>= (count-once-per-objects throwAttemptFromDoor) 3)
 )
)
(:scoring
  (* 10 (count-once-per-objects dodgeballThrownToBin))
)
)



(define (game game-50-0-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin:purple)
)
)





(define (game game-50-1-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?h)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-2-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (not (and (and (and (not (in agent ?g)) (touch ?h ?g)) (on ?g ?h)) (agent_holds ?g)))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-3-nd-7-rd-14-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?h - desktop)
        (then
          (once (and (in_motion ?h) (in_motion ?h) (between ?h ?h ?h)))
          (once (agent_holds ?h))
          (once (agent_holds ?h))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-4-nd-7-rd-5-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b - ball ?g - blinds)
      (game-conserved
        (< (distance room_center ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-5-nd-5-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin:hexagonal_bin)
)
)





(define (game game-50-6-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (same_object ?g ?h)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-7-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (in_motion agent) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-8-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?h) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (on ?g agent)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-9-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?h)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-10-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?h) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-11-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - (either drawer dodgeball_pink))
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-12-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center floor) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-13-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (open ?h)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-14-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds floor) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin)
)
)





(define (game game-50-15-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference gameObjectToBin
      (exists (?g - game_object ?h - hexagonal_bin)
        (then
          (once (not (agent_holds ?g)))
          (hold (or (agent_holds ?g) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects gameObjectToBin:chair)
)
)



(define (game game-51-0-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (on ?h ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-1-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (forall (?b4 - dodgeball) (and (in agent ?h) (agent_holds ?d)))))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-2-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?o2 - bottom_shelf ?h - hexagonal_bin)
        (then
          (once (agent_holds ?o2))
          (hold (and (not (agent_holds ?o2)) (in_motion ?o2)))
          (once (and (not (in_motion ?o2)) (in ?h ?o2)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-3-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (same_color ?h ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-4-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (adjacent ?h ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-5-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-6-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?h)) (in ?d agent)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-7-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (agent_holds ?d) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-8-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin:cube_block_blue)
)
)





(define (game game-51-9-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?d ?h)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-10-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - flat_block_yellow)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-11-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (not (not (rug_color_under ?h tan)))) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-12-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (agent_holds ?h)) (not (not (and (in_motion bottom_shelf) (agent_holds bed))))))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-13-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?h))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin)
)
)





(define (game game-51-14-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin:north_wall:laptop)
)
)





(define (game game-51-15-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwToBin:purple)
)
)



(define (game game-52-0-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (agent_holds ?c))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-1-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (on ?c side_table)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-2-nd-25-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?c) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-3-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on room_center ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-4-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on ?c ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-5-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (and (in_motion ?c) (in_motion rug)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-6-nd-3-rd-3-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk:pink)
)
)





(define (game game-52-7-nd-8-rd-18-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on room_center south_wall) (rug_color_under desk purple)))
          (once (not (agent_holds ?c)))
          (hold (< (distance_side ?c left desk right) (distance ?c ?c)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-8-nd-15-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (> (distance ?c ?c) 2))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-9-nd-22-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (and (touch ?o ?c) (on ?c ?o)))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-10-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (agent_holds ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-11-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (and (exists (?p1 - ball) (agent_holds agent)) (same_object ?c ?c))) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-12-nd-19-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (agent_holds ?c)))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-13-nd-23-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either sliding_door beachball)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-14-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (< 1 (x_position ?c)) (in_motion ?c) (not (agent_holds ?c)) (not (exists (?o - (either lamp desktop laptop)) (or (broken ?o) (in_motion ?o))))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)





(define (game game-52-15-nd-17-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference blockFromRugToDesk
      (exists (?c - cube_block)
        (then
          (once (and (on rug agent) (agent_holds ?c)))
          (hold (and (on rug agent) (in_motion ?c) (not (agent_holds ?c)) (not (same_type ?c tall_cylindrical_block))))
          (once (and (on rug agent) (on desk ?c) (not (in_motion ?c))))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects blockFromRugToDesk)
)
)



(define (game game-53-0-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (agent_holds ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-1-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?c ?s)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-2-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?w1 ?d)
            (in_motion desk)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-3-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 60 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-4-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent_side ?w2 front ?w1)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-5-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (not
            (above ?s ?c)
         )
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-6-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?o ?d)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-7-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?c3 - top_shelf ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?w2 ?d)
            (adjacent ?w2 ?w1)
            (adjacent ?w2 ?c3)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-8-nd-10-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (* (count-once smallItemsInPlace:basketball) (count smallItemsInPlace:purple:shelf_desk) (count-once-per-external-objects dodgeballsInPlace:bridge_block_tan) (* 0.7 (count-once-per-objects smallItemsInPlace:pencil:cellphone))
     )
   )
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-9-nd-7-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?c4 - tall_cylindrical_block_yellow)
        (at-end
          (same_color ?c4 ?c4)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-10-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch key_chain) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-11-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - pillow ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-12-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - ball)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-13-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - dodgeball)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)





(define (game game-53-14-nd-6-rd-8-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 5 (count-once-per-objects blocksInPlace))
    (* (count-once-per-objects smallItemsInPlace:drawer:hexagonal_bin:dodgeball) (+ (count-once-per-objects smallItemsInPlace:hexagonal_bin) (+ (count-once-per-objects smallItemsInPlace:golfball) (count-once smallItemsInPlace:golfball_orange:blue))
        -1
        (count smallItemsInPlace)
     )
      (count smallItemsInPlace:gray:tall_cylindrical_block_green)
   )
 )
)
)





(define (game game-53-15-nd-6-rd-8-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference dodgeballsInPlace
      (exists (?d - dodgeball ?h - hexagonal_bin ?w1 ?w2 - wall)
        (at-end
          (and
            (in ?h ?d)
            (adjacent ?h ?w1)
            (adjacent ?h ?w2)
         )
       )
     )
   )
    (preference blocksInPlace
      (exists (?c - cube_block ?s - shelf)
        (at-end
          (on ?s ?c)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain mug credit_card cd watch alarm_clock) ?d - drawer)
        (at-end
          (and
            (in ?d ?o)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects dodgeballsInPlace))
    (* 7 0.2)
    (* 5 (count-once-per-objects smallItemsInPlace))
 )
)
)



(define (game game-54-0-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (on door ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-1-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (in agent ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-2-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (or (same_object ?l ?b) (opposite ?l ?b)) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-3-nd-8-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - hexagonal_bin)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-4-nd-6-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?w2 ?c ?b ?o ?bl - (either cd triangle_block_tan))
      (and
        (preference matchingBuildingBuilt
          (then
            (once (not (agent_holds ?bl)))
            (hold (agent_holds ?w2))
            (once (not (agent_holds ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-5-nd-13-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (not (on bottom_shelf ?l)))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-6-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in ?b ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-7-nd-11-rd-1-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPlacedInBuilding:shelf)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-8-nd-8-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?g - game_object)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?g)))
            (hold (agent_holds ?g))
            (once (not (agent_holds ?g)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-9-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (in_motion ?b))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-10-nd-14-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (not (in_motion west_sliding_door)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-11-nd-15-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?l ?b))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-12-nd-8-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?c - (either cellphone cube_block))
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?c)))
            (hold (agent_holds ?c))
            (once (not (agent_holds ?c)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-13-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (agent_crouches)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-14-nd-9-rd-14-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?t2 - dodgeball)
            (at-end
              (agent_holds ?t2)
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)





(define (game game-54-15-nd-13-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - cube_block)
            (then
              (once (not (in_motion bed)))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
     )
   )
    (forall (?l - cube_block)
      (and
        (preference blockPickedUp
          (then
            (once (not (agent_holds ?l)))
            (hold (agent_holds ?l))
            (once (not (agent_holds ?l)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (external-forall-maximize (count blockPickedUp)) 3)
)
(:scoring
  (external-forall-maximize
    (count-overlapping blockPlacedInBuilding)
 )
)
)



(define (game game-55-0-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds agent))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-1-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?h) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-2-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (and (not (adjacent ?h east_wall)) (and (and (on agent ?o) (in_motion ?h)) (in_motion ?o) (agent_holds ?o) (not (not (in_motion ?h)))) (in ?h ?o) (in ?h ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-3-nd-6-rd-15-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?c5 ?b - dodgeball)
        (then
          (hold (in_motion room_center))
          (once (rug_color_under ?b red))
          (hold (agent_holds floor))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-4-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance ?h agent) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-5-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - pillow)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-6-nd-12-rd-6-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< 0.5 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-7-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?c4 - teddy_bear)
      (game-conserved
        (< (distance room_center ?c4) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-8-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (agent_holds ?h) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-9-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?h)) (in_motion agent)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-10-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (on ?o ?h))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-11-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - triangle_block_green)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-12-nd-10-rd-8-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (in_motion ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-13-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?h))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-14-nd-14-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 0.1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)





(define (game game-55-15-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - basketball)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference objectToBinOnFirstTry
      (exists (?o - game_object ?h - hexagonal_bin)
        (then
          (once (game_start))
          (hold (not (agent_holds ?o)))
          (hold (agent_holds ?o))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (in ?h ?o)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectToBinOnFirstTry)
)
)



(define (game game-56-0-nd-17-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion agent)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-1-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in agent ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-2-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (agent_holds bed)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-3-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (< 1 (distance room_center floor))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-4-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?h - dodgeball)
        (then
          (once (agent_holds ?h))
          (hold (and (not (agent_holds ?h)) (in_motion ?h)))
          (once (not (in_motion ?h)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-5-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (on ?h ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-6-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin:dodgeball)
)
)





(define (game game-56-7-nd-10-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (agent_holds ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-8-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - cube_block_yellow ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-9-nd-3-rd-3-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count-once-per-objects throwFromDoorToBin:golfball)
)
)





(define (game game-56-10-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - chair ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-11-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?h)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-12-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?h) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-13-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - building)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-14-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (and (not (agent_holds top_drawer)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)





(define (game game-56-15-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwFromDoorToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent door agent)))
          (hold (agent_holds ?d))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 3)
)
(:scoring
  (count throwFromDoorToBin)
)
)



(define (game game-57-0-nd-6-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count beachballOnRug:flat_block_tan:pink:bridge_block_green:watch) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-1-nd-6-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b1 - lamp)
        (at-end
          (agent_holds ?b1)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-2-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (and
            (not
              (in_motion ?d)
           )
            (same_color ?o green)
         )
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-3-nd-12-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (on ?b ?d)
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-4-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?b - top_drawer)
        (at-end
          (on ?b ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-5-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - beachball)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-6-nd-5-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count smallItemsInPlace:tall_cylindrical_block) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-7-nd-6-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count beachballOnRug:dodgeball) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-8-nd-8-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (in_motion ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-9-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - credit_card)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-10-nd-9-rd-14-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (agent_holds ?d)
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-11-nd-10-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o4 - cellphone ?d - shelf_desk)
        (at-end
          (and
            (on ?o4 ?d)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-12-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (agent_holds ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-13-nd-9-rd-12-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (agent_holds desk)
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-14-nd-12-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on ?b ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects smallItemsInPlace) (count-once-per-objects watchOnShelf))
)
)





(define (game game-57-15-nd-9-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bookOnDeskShelf
      (exists (?b - book ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?b)
            (not
              (exists (?o - (either pencil pen cd))
                (on ?d ?o)
             )
           )
         )
       )
     )
   )
    (preference otherObjectsOnDeskShelf
      (exists (?o - (either pencil pen cd) ?d - shelf_desk)
        (at-end
          (and
            (on ?d ?o)
            (not
              (exists (?b - book)
                (on ?d ?b)
             )
           )
         )
       )
     )
   )
    (preference dodgeballAndBasketballInBin
      (exists (?b - (either dodgeball basketball) ?h - hexagonal_bin)
        (at-end
          (in ?h ?b)
       )
     )
   )
    (preference beachballOnRug
      (exists (?b - beachball)
        (at-end
          (on rug ?b)
       )
     )
   )
    (preference smallItemsInPlace
      (exists (?o - (either cellphone key_chain cd) ?d - drawer)
        (at-end
          (in ?d ?o)
       )
     )
   )
    (preference watchOnShelf
      (exists (?w - watch ?s - shelf)
        (at-end
          (on ?s ?w)
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects bookOnDeskShelf) (count-once-per-objects otherObjectsOnDeskShelf) (count-once-per-objects dodgeballAndBasketballInBin) (count-once-per-objects beachballOnRug) (count-once-per-objects beachballOnRug:dodgeball) (count-once-per-objects watchOnShelf))
)
)



(define (game game-58-0-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in_motion ?l2) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-1-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-2-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - dodgeball)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-3-nd-24-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?l1 ?b1)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-4-nd-11-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (in_motion ?l))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-5-nd-25-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 cube_block)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-6-nd-15-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on west_sliding_door ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-7-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - cube_block_yellow) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-8-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (agent_holds agent)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-9-nd-21-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?w1 ?b - ball)
                  (and
                    (in ?b2 ?b1)
                    (in ?b2 ?l2)
                    (on ?b1 ?l2)
                    (same_type ?l1 ?b1)
                    (same_type ?l2 ?w1)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-10-nd-11-rd-3-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count matchingBuildingBuilt:book))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-11-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (and
                (and
                  (in_motion ?b1)
                  (game_over)
               )
                (exists (?o - cylindrical_block)
                  (same_type ?o hexagonal_bin)
               )
             )
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-12-nd-23-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (on ?l ?b)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-13-nd-15-rd-5-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (< (distance ?b ?b) (distance ?b ?b))
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-14-nd-11-rd-3-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-optional
        (not
          (on ?s ?l)
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count gameBlockFound:building))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)





(define (game game-58-15-nd-8-rd-8-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?l - block ?s - shelf)
      (game-conserved
        (not
          (and
            (agent_holds ?s)
            (touch ?l ?s)
         )
       )
     )
   )
    (exists (?b - building)
      (game-conserved
        (and
          (= (building_size ?b) 6)
          (forall (?l - block)
            (or
              (in ?b ?l)
              (exists (?l2 - block)
                (and
                  (in ?b ?l2)
                  (not
                    (same_object ?l ?l2)
                 )
                  (same_type ?l ?l2)
               )
             )
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference gameBlockFound
      (exists (?l - block)
        (then
          (once (game_start))
          (hold (not (exists (?b - building) (and (in ?b ?l) (is_setup_object ?b)))))
          (once (agent_holds ?l))
       )
     )
   )
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (preference matchingBuildingBuilt
      (exists (?b1 ?b2 - building)
        (at-end
          (and
            (is_setup_object ?b1)
            (not
              (is_setup_object ?b2)
           )
            (forall (?l1 ?l2 - block)
              (or
                (not
                  (in ?b1 ?l1)
               )
                (not
                  (in ?b1 ?l2)
               )
                (not
                  (on ?l1 ?l2)
               )
                (exists (?l3 ?l4 - block)
                  (and
                    (in ?b2 ?l3)
                    (in ?b2 ?l4)
                    (on ?l3 ?l4)
                    (same_type ?l1 ?l3)
                    (same_type ?l2 ?l4)
                 )
               )
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects gameBlockFound))
    (* 100 (count-once matchingBuildingBuilt))
    (* -10 (count towerFallsWhileBuilding))
 )
)
)



(define (game game-59-0-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* (count ballThrownToBin:alarm_clock) (count-once-per-objects ballThrownToBin:pyramid_block_blue))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-1-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (same_color ?b gray)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-2-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion room_center)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-3-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in ?b ?h)) (in_motion ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-4-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (in ?b ?h)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-5-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (on ?b ?h)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-6-nd-15-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance bed ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-7-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (on ?h ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-8-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:pink))
 )
)
)





(define (game game-59-9-nd-6-rd-7-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?r - dodgeball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?h))
              (hold (and (not (agent_holds ?h)) (in_motion ?h)))
              (once (and (not (in_motion ?h)) (in ?h ?r)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-10-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:cube_block_yellow))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-11-nd-10-rd-8-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (agent_holds ?h)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-12-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?w1 - triangular_ramp)
      (game-conserved
        (< (distance door ?w1) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-13-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (> (distance ?b ?h) (distance ?b ?h))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-14-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance door ?h) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - room_center)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)





(define (game game-59-15-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?d ?ob - hexagonal_bin)
      (game-conserved
        (< (distance door ?ob) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball dodgeball beachball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count ballThrownToBin:golfball))
    (* 3 (count ballThrownToBin:dodgeball))
    (* 4 (count ballThrownToBin:beachball))
 )
)
)



(define (game game-61-0-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (not
              (not
                (or
                  (not
                    (in_motion room_center)
                 )
                  (not
                    (toggled_on ?f)
                 )
               )
             )
           )
            (agent_holds floor)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-1-nd-12-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (once (in ?d ?h))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-2-nd-11-rd-6-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count cubeBlockInBuilding:triangular_ramp))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-3-nd-11-rd-6-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:yellow:dodgeball))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-4-nd-7-rd-7-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* (- 24)
      (count cubeBlockInBuilding:pink)
   )
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-5-nd-10-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (count-once cubeBlockInBuilding:cube_block:game_object))
 )
)
)





(define (game game-61-6-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    0.1
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-7-nd-13-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (adjacent_side ?p front ?h))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-8-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:hexagonal_bin))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-9-nd-12-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on ?p ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-10-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?h)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-11-nd-19-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:alarm_clock) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-12-nd-19-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?p3 ?p2) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-13-nd-9-rd-5-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count dodgeballFromBlockToBin:yellow))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-14-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* (count dodgeballFromBlockToBin:cd) (external-forall-maximize (count-once-per-objects cubeBlockInBuilding:dodgeball)))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:pyramid_block_blue) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)





(define (game game-61-15-nd-13-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (game-conserved
    (and
      (exists (?f - flat_block)
        (on rug ?f)
     )
      (forall (?p - pyramid_block)
        (on floor ?p)
     )
      (exists (?p1 - pyramid_block_yellow ?p2 - pyramid_block_red ?p3 - pyramid_block_blue ?h - hexagonal_bin)
        (and
          (> (distance ?h ?p2) (distance ?h ?p1))
          (> (distance ?h ?p3) (distance ?h ?p2))
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?p - pyramid_block)
      (and
        (preference dodgeballFromBlockToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?p agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
    (preference cubeBlockInBuilding
      (exists (?b - building ?l - cube_block ?f - flat_block)
        (at-end
          (and
            (is_setup_object ?f)
            (in ?b ?f)
            (in ?b ?l)
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 10 (count dodgeballFromBlockToBin:pyramid_block_yellow))
    (* 25 (count dodgeballFromBlockToBin:pyramid_block_red))
    (* 50 (count dodgeballFromBlockToBin:pyramid_block_blue))
    (* 100 (= (count-once-per-objects dodgeballFromBlockToBin:ball) 3)
   )
    (* 10 (count-once-per-objects cubeBlockInBuilding))
    (* 100 (= (count-once-per-objects cubeBlockInBuilding) 3)
   )
 )
)
)



(define (game game-62-0-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - cylindrical_block_tan)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-1-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on ?o ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-2-nd-12-rd-14-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (same_object ?o ?o))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-3-nd-11-rd-3-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count-once-per-objects bigObjectThrownToBed:red))
 )
)
)





(define (game game-62-4-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (broken ?o) (in ?o ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-5-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk room_center)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-6-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?b - (either bridge_block_tan shelf wall) ?b5 - dodgeball_pink)
        (then
          (once (and (agent_holds ?b) (adjacent desk agent)))
          (hold (and (not (agent_holds ?b5)) (in_motion ?b5)))
          (once (and (not (in_motion ?b5)) (not (on bed ?b5))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-7-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (in_motion room_center))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-8-nd-8-rd-18-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (hold (on ?o rug))
          (hold (not (or (in_motion ?o))))
          (hold-while (in_motion ?o) (agent_holds ?o))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-9-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (and (on ?o ?o) (in_motion ?o)) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-10-nd-25-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop beachball)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-11-nd-7-rd-19-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?t - doggie_bed ?l1 - (either dodgeball hexagonal_bin))
        (then
          (once (agent_holds room_center))
          (once (agent_holds ?t))
          (hold-while (in ?t ?l1) (touch ?l1 ?t))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-12-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (and (> 0.8 0.3) (on ?o ?o) (between ?o ?o ?o) (in_motion ?o) (not (touch door ?o)) (not (not (not (broken ?o)))) (agent_holds ?o))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-13-nd-10-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (exists (?d - east_sliding_door) (not (not (agent_holds bed)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-14-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (not (not (forall (?bl - watch ?l4 - triangle_block_tan) (in bed desk)))))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)





(define (game game-62-15-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference bigObjectThrownToBed
      (exists (?o - (either chair laptop doggie_bed))
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference smallObjectThrownToBed
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent) (not (exists (?o2 - (either chair laptop doggie_bed)) (same_object ?o ?o2)))))
          (hold (and (and (and (in_motion ?o) (in_motion ?o) (not (is_setup_object ?o))) (and (and (and (is_setup_object ?o) (not (in_motion floor))) (agent_holds ?o)) (agent_holds ?o) (not (not (above ?o ?o))))) (and (or (agent_holds ?o) (on ?o ?o) (agent_holds ?o) (not (in ?o ?o))) (on ?o ?o) (adjacent ?o ?o))))
          (once (and (not (in_motion ?o)) (on bed ?o)))
       )
     )
   )
    (preference failedThrowAttempt
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent desk agent)))
          (hold (and (not (agent_holds ?o)) (in_motion ?o)))
          (once (and (not (in_motion ?o)) (not (on bed ?o))))
       )
     )
   )
 )
)
(:scoring
  (+ (count smallObjectThrownToBed) (* 5 (count bigObjectThrownToBed))
    (* -5 (count failedThrowAttempt))
 )
)
)



(define (game game-63-0-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in_motion ?b))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-1-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?l2 agent) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-2-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (touch ?l2 ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-3-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l2) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-4-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (in_motion agent))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-5-nd-15-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (agent_holds ?b))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-6-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l2) (<= 1 0.8) (not (in_motion mirror))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-7-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (agent_holds ?l2))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-8-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion north_wall) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-9-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (on ?l ?b))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-10-nd-8-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (* (* -11 (count-shortest towerFallsWhileBuilding:red:golfball))
        -2
     )
      (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-11-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (touch ?b ?l2)))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-12-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (on ?b desk))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-13-nd-21-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (on east_wall ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-14-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (object_orientation room_center upright) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in ?b ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)





(define (game game-63-15-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference towerFallsWhileBuilding
      (exists (?b - building ?l1 ?l2 - block)
        (then
          (once (and (in ?b ?l1) (agent_holds ?l2) (not (is_setup_object ?b))))
          (hold-while (and (not (agent_holds ?l1)) (in ?b ?l1) (or (agent_holds ?l2) (in_motion ?l2))) (touch ?l1 ?l2))
          (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
          (once (not (in_motion ?l1)))
       )
     )
   )
    (forall (?b - building)
      (and
        (preference blockPlacedInBuilding
          (exists (?l - block)
            (then
              (once (agent_holds ?l))
              (hold (and (in_motion ?l) (not (agent_holds ?l))))
              (hold (in_motion ?l))
              (once (or (not (in ?b ?l)) (game_over)))
           )
         )
       )
        (preference nonBlockPlacedInBuilding
          (exists (?o - game_object)
            (then
              (once (and (agent_holds ?o) (not (same_type ?o block))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (hold (in ?b ?o))
              (once (or (not (in ?b ?o)) (game_over)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once towerFallsWhileBuilding) 1)
)
(:scoring
  (external-forall-maximize
    (+ (count-overlapping blockPlacedInBuilding) (* 2 (count-overlapping nonBlockPlacedInBuilding))
   )
 )
)
)



(define (game game-64-0-nd-9-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:desk) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-1-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin doggie_bed wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-2-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o ?h)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-3-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* (count-measure ballThrownFromObjectToBin:dodgeball_blue) (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-4-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?h)) (in_motion ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-5-nd-6-rd-7-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?d1 - room_center)
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?d agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-6-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:red))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-7-nd-12-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (adjacent_side ?d back ?d) (not (in_motion rug))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-8-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* (count ballThrownFromObjectToBin:dodgeball) (count-longest ballThrownFromObjectToBin:bridge_block) (count-once ballThrownFromObjectToBin:pyramid_block_yellow:triangular_ramp:red))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-9-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds desk) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-10-nd-13-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - cube_block_yellow)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-11-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 30 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-12-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (on ?o ?h)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-13-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (and (not (adjacent ?d ?h)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-14-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?h ?o)))
              (hold (and (not (agent_holds ?d)) (in_motion ?d)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)





(define (game game-64-15-nd-13-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?o - (either hexagonal_bin rug wall))
      (and
        (preference ballThrownFromObjectToBin
          (exists (?d - dodgeball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?d) (adjacent ?o agent)))
              (hold (not (agent_holds ?h)))
              (once (and (not (in_motion ?d)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count ballThrownFromObjectToBin:hexagonal_bin) (* 2 (count ballThrownFromObjectToBin:rug))
    (* 3 (count ballThrownFromObjectToBin:wall))
 )
)
)



(define (game game-65-0-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - golfball_white)
        (at-end
          (on bed ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-1-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - (either bed ball))
        (at-end
          (on bed ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-2-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?p - golfball)
        (at-end
          (on bed ?p)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-3-nd-6-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?d - beachball)
        (then
          (hold (opposite ?d ?d))
          (hold (= 0))
          (once (agent_holds ?d))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-4-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - dodgeball)
        (at-end
          (on bed ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-5-nd-9-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - ball)
        (at-end
          (on ?b ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-6-nd-10-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - ball)
        (at-end
          (in ?b agent)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-7-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - ball)
        (at-end
          (on bed ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd:cd)
)
)





(define (game game-65-8-nd-13-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - ball)
        (at-end
          (on agent ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-9-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - ball)
        (at-end
          (on bed ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd:tall_cylindrical_block:gray:pink)
)
)





(define (game game-65-10-nd-7-rd-7-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - pen)
        (at-end
          (on desk ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-11-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - triangle_block_green)
        (at-end
          (on bed ?b)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-12-nd-6-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b ?o ?b ?o1 - bottom_shelf ?d2 - flat_block)
        (at-end
          (agent_holds ?d2)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-13-nd-8-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - ball)
        (at-end
          (agent_holds floor)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)





(define (game game-65-14-nd-3-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?b - ball)
        (at-end
          (on bed ?b)
       )
     )
   )
 )
)
(:scoring
  (count ballOnBedAtEnd:game_object:wall)
)
)





(define (game game-65-15-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballOnBedAtEnd
      (exists (?d - triangle_block)
        (at-end
          (on bed ?d)
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects ballOnBedAtEnd)
)
)



(define (game game-66-0-nd-22-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (not (in ?o ?ob)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-1-nd-10-rd-8-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (count-once blockIncorrectlyPicked:lamp))
 )
)
)





(define (game game-66-2-nd-22-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?o)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-3-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds door) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-4-nd-26-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (x_position ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-5-nd-28-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?b ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-6-nd-26-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - wall) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-7-nd-6-rd-4-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (* (count-same-positions blockCorrectlyPicked:cylindrical_block) (- (count-shortest blockIncorrectlyPicked:blinds))
   )
    4
 )
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-8-nd-12-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked:wall:dodgeball_red))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-9-nd-21-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (in_motion ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-10-nd-16-rd-15-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (in agent ?o) (agent_holds ?o) (not (and (on ?tb ?d) (agent_holds ?tb)))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-11-nd-19-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (and (on ?b ?d) (not (< 4 (distance ?tb ?d))))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-12-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (and (or (agent_holds agent)) (not (in_motion ?b))) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?o) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-13-nd-24-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?p ?t ?f ?o2 - pyramid_block_blue) (and (not (same_object ?o2 ?b)) (on top_shelf ?b))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?b) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-14-nd-5-rd-9-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ 70 (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)





(define (game game-66-15-nd-28-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (forall (?b - (either bridge_block cube_block))
      (game-conserved
        (< (distance door ?b) 1)
     )
   )
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (game-optional
        (on bottom_shelf ?b)
     )
   )
    (forall (?b - (either flat_block pyramid_block))
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?b)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either cylindrical_block tall_cylindrical_block))
      (and
        (preference blockCorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (same_object ?b ?ob)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (same_color ?b ?tb)))
           )
         )
       )
        (preference blockIncorrectlyPicked
          (exists (?d - dodgeball ?o - doggie_bed ?tb - (either bridge_block cube_block))
            (then
              (once (and (agent_holds ?d) (on ?o agent) (on top_shelf ?b) (not (exists (?ob - block) (and (not (touch ?ob ?tb)) (on top_shelf ?ob))))))
              (hold (and (not (agent_holds ?d)) (in_motion ?d) (not (agent_holds ?b))))
              (once (and (not (in_motion ?d)) (not (exists (?ob - block) (< (distance ?d ?ob) (distance ?d ?tb)))) (not (same_color ?b ?tb))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
)
(:scoring
  (+ (* 10 (count-once-per-external-objects blockCorrectlyPicked))
    (- (count blockIncorrectlyPicked))
    (* 100 (>= (count-once-per-external-objects blockCorrectlyPicked) 4)
   )
 )
)
)



(define (game game-67-0-nd-13-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block pyramid_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-1-nd-20-rd-2-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance bed ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-2-nd-19-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk bed) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-3-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object agent)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-4-nd-14-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (and (not (and (adjacent ?b ?l) (not (same_color ?b ?l)))) (above ?b ?l)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-5-nd-20-rd-2-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance ?b8 ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-6-nd-20-rd-2-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance main_light_switch ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-7-nd-8-rd-14-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (object_orientation rug upright)
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-8-nd-20-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance east_wall ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-9-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk right ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-10-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (= 2 100)
   )
 )
)
)





(define (game game-67-11-nd-11-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:game_object) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-12-nd-14-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (in ?b ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-13-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (agent_holds room_center)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-14-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - building)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* 0.7 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)





(define (game game-67-15-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 ?b2 ?b3 ?b4 ?b5 ?b6 ?b7 ?b8 ?b9 ?b10 - (either tall_cylindrical_block bridge_block flat_block cube_block cylindrical_block))
      (game-optional
        (and
          (= (distance desk ?b1) (distance desk ?b2) (distance desk ?b3) (distance desk ?b4))
          (= (distance desk ?b5) (distance desk ?b6) (distance desk ?b7))
          (= (distance desk ?b8) (distance desk ?b9))
          (< (distance desk ?b10) 2)
          (< (distance desk ?b1) (distance desk ?b5))
          (< (distance desk ?b5) (distance desk ?b8))
          (< (distance desk ?b8) (distance desk ?b10))
       )
     )
   )
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballKnocksBlockFromRug
          (exists (?l - block)
            (then
              (once (and (agent_holds ?b) (on rug agent) (is_setup_object ?l)))
              (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (touch ?b ?l) (in_motion ?l))
              (once (not (in_motion ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (on rug agent)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 16)
)
(:scoring
  (+ (count-once-per-objects ballKnocksBlockFromRug:dodgeball) (* -8 (count-once-per-objects ballKnocksBlockFromRug:basketball))
    (* 0.5 (count-once-per-objects ballKnocksBlockFromRug:beachball))
 )
)
)



(define (game game-69-0-nd-7-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?p2 - wall)
      (game-conserved
        (adjacent ?p2 ?p2)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-1-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in bed ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-2-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (and (agent_holds ?d) (< (distance ?d ?c) 1) (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-3-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (adjacent bed east_wall)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-4-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (once (not (on ?h side_table)))
          (once (and (not (in_motion ?d)) (in ?h ?c)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-5-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?c)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-6-nd-9-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (not
          (not
            (and
              (not
                (same_type ?c pencil)
             )
              (in_motion rug)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-7-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (in_motion ?c)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-8-nd-15-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?c ?h))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-9-nd-16-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?h ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-10-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-11-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in ?d ?h)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-12-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-13-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?c)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-14-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?h)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)





(define (game game-69-15-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?c - curved_wooden_ramp ?h - hexagonal_bin)
      (game-conserved
        (adjacent ?c ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampToBin
      (exists (?d - dodgeball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (in_motion ?c))
          (hold-while (and (not (agent_holds ?d)) (in_motion ?d)) (touch ?d ?c))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampToBin)
)
)



(define (game game-70-0-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - (either north_wall poster) ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-1-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball hexagonal_bin pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-2-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed ?c) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-3-nd-17-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either west_sliding_door laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-4-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:ball))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-5-nd-6-rd-7-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (= (count objectLandsInBin:game_object) (- 6)
      (count golfballLandsInBinThroughRamp:west_sliding_door)
   )
 )
)
)





(define (game game-70-6-nd-11-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either west_sliding_door cube_block hexagonal_bin dodgeball))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-7-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch floor ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-8-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (in ?h bed)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-9-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 15 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-10-nd-14-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (not (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-11-nd-10-rd-8-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (in ?o ?o)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-12-nd-9-rd-15-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?b - (either ball bed cylindrical_block) ?d - chair)
            (at-end
              (not
                (object_orientation ?o sideways)
             )
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-13-nd-14-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (not (in_motion ?h)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)





(define (game game-70-14-nd-12-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count objectLandsInBin:triangle_block) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count objectLandsInBin:ball:pink))
 )
)
)





(define (game game-70-15-nd-5-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (not
          (adjacent_side desk front ?c)
       )
     )
   )
    (exists (?h - hexagonal_bin ?c - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side desk front ?c)
          (adjacent_side ?h front ?c back)
       )
     )
   )
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (game-optional
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either golfball dodgeball triangle_block pyramid_block))
      (and
        (preference objectLandsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference thrownObjectHitsComputer
          (exists (?c - (either desktop laptop))
            (then
              (once (and (adjacent bed agent) (agent_holds ?o)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (touch ?o ?c))
           )
         )
       )
     )
   )
    (preference golfballLandsInBinThroughRamp
      (exists (?g - golfball ?c - curved_wooden_ramp ?h - hexagonal_bin)
        (then
          (once (and (adjacent bed agent) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g))) (touch ?c ?g))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-measure thrownObjectHitsComputer:blue) (* 2 (count objectLandsInBin:pyramid_block))
    (* 2 (count objectLandsInBin:dodgeball))
    (* 3 (count objectLandsInBin:golfball))
    (* 6 (count golfballLandsInBinThroughRamp))
    (- (count thrownObjectHitsComputer))
 )
)
)



(define (game game-71-0-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (game_start) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-1-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance ?g ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-2-nd-14-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (in ?b east_sliding_door))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-3-nd-14-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on agent ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-4-nd-8-rd-16-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (in_motion ?d))
          (hold-while (agent_crouches) (>= 1 (building_size ?r)))
          (once (not (not (in ?p ?d))))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-5-nd-16-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (same_color ?r green))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-6-nd-14-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion desk)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-7-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - curved_wooden_ramp)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-8-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?p) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-9-nd-19-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - desktop ?g - golfball_green) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-10-nd-7-rd-8-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-optional
        (on ?p ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-11-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r top_drawer) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-12-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch desk ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-13-nd-7-rd-8-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (exists (?c1 - game_object ?h - key_chain)
        (forall (?w1 - cd)
          (game-conserved
            (in_motion ?w1)
         )
       )
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-14-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (in ?d agent)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)





(define (game game-71-15-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (forall (?p - pillow)
      (game-conserved
        (on bed ?p)
     )
   )
    (forall (?b - bridge_block)
      (game-conserved
        (on floor ?b)
     )
   )
    (forall (?c - cylindrical_block)
      (game-conserved
        (exists (?o - (either pillow bridge_block))
          (< (distance ?c ?o) 1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsPillowWithoutTouchingBlock
      (exists (?d - dodgeball ?p - pillow ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?d)))
          (hold-while (and (in_motion ?d) (not (faces ?p ?r)) (not (exists (?c - cylindrical_block) (touch ?c ?d)))) (touch ?d ?p))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference golfballUnderBridgeWithoutTouchingBlock
      (exists (?g - golfball ?b - bridge_block ?r - triangular_ramp)
        (then
          (once (and (adjacent ?r agent) (< (distance desk ?r) 1) (agent_holds ?g)))
          (hold-while (and (in_motion ?g) (not (agent_holds ?g)) (not (exists (?c - cylindrical_block) (touch ?c ?g)))) (above ?g ?b))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:scoring
  (+ (count dodgeballHitsPillowWithoutTouchingBlock) (count golfballUnderBridgeWithoutTouchingBlock))
)
)



(define (game game-72-0-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (< (distance ?b agent) 0.5))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-1-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (agent_holds ?b) (exists (?db - tall_cylindrical_block ?w1 - chair) (in_motion desk)) (on ?t ?b) (< 7 (distance ?c agent))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-2-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (same_type ?b dodgeball) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-3-nd-11-rd-7-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (>= (distance ?b ?b) (distance ?b floor))
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-4-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?c) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-5-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t diagonal)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-6-nd-11-rd-7-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance ?b ?b) (distance ?b ?b))
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-7-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - (either pencil watch tall_cylindrical_block_tan west_wall))
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-8-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t sideways)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-9-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (object_orientation ?t upside_down))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-10-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?l1 - tall_cylindrical_block)
        (then
          (once (and (on ?l1 agent) (adjacent ?l1 desk) (agent_holds ?l1) (object_orientation ?l1 upright)))
          (hold-while (and (in_motion ?l1) (not (agent_holds ?l1))) (touch ?l1 ?l1))
          (once (not (object_orientation ?l1 upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-11-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?o - pillow)
      (game-optional
        (< (distance desk ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-12-nd-8-rd-10-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-conserved
        (agent_holds ?b)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-13-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (not (adjacent agent door)) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-14-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (on bed ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c desk) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)





(define (game game-72-15-nd-11-rd-7-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (agent_holds ?t)
          (not
            (forall (?l - wall ?h ?o1 ?d1 - drawer ?g - triangle_block)
              (in agent ?g)
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (< (distance desk ?b) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference ballKnocksTeddy
      (exists (?b - ball ?t - teddy_bear ?c - chair)
        (then
          (once (and (on ?c agent) (adjacent ?c desk) (agent_holds ?b) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?t))
          (once (not (object_orientation ?t upright)))
       )
     )
   )
 )
)
(:terminal
  (>= (count ballKnocksTeddy) 7)
)
(:scoring
  (count ballKnocksTeddy)
)
)



(define (game game-73-0-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (agent_holds ?h))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-1-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?o1 - tall_cylindrical_block)
      (game-optional
        (on desk ?o1)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-2-nd-7-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?b ?b6 - tall_cylindrical_block)
      (game-conserved
        (< (distance room_center ?b) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-3-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (in_motion ?h) (touch ?h agent)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-4-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?d agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-5-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - pillow ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-6-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (rug_color_under ?h tan))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-7-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (< 0 (distance_side ?d back ?h)))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-8-nd-13-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on ?d ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-9-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (once (not (in_motion ?h)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-10-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?c - bridge_block)
        (then
          (once (and (adjacent desk agent) (agent_holds ?c)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (in ?c ?c)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-11-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (game_over))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-12-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?h) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-13-nd-6-rd-15-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?h - ball)
        (then
          (once (not (in_motion ?h)))
          (once (not (agent_holds east_sliding_door)))
          (once (agent_holds ?h))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-14-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - dodgeball)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)





(define (game game-73-15-nd-13-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (< (distance room_center ?h) 1)
     )
   )
    (forall (?d - dodgeball)
      (game-optional
        (on desk agent)
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballThrownToBinFromDesk
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (adjacent desk agent) (agent_holds ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballThrownToBinFromDesk)
)
)



(define (game game-74-0-nd-4-rd-6-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-once-per-objects throwAttempt:rug) 5)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-1-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - ramp ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-2-nd-12-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (agent_holds ?p))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-3-nd-12-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?w - (either cd tall_cylindrical_block_green))
        (< (distance ?h ?w) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-4-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h room_center)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-5-nd-6-rd-4-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (* (+ 5 (count-once-per-external-objects golfballInBinFromPillow:cylindrical_block_green:floor))
      (* (count-once golfballInBinFromPillow:golfball) (* (count throwAttempt:building) -30)
     )
   )
    10
 )
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-6-nd-12-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?o4 - cube_block ?p - pillow)
        (< (distance ?p ?o4) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-7-nd-9-rd-1-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count golfballInBinFromPillow:basketball) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-8-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in_motion rug)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-9-nd-6-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 50 (count golfballInBinFromPillow))
)
)





(define (game game-74-10-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?h ?b2 - triangular_ramp_tan ?c - curved_wooden_ramp ?w2 - dodgeball_red)
        (then
          (once (and (adjacent ?b2 agent) (agent_holds ?bl) (is_setup_object ?b)))
          (hold (and (in_motion ?h) (not (agent_holds ?l2))))
          (once (and (not (in_motion ?c)) (in ?o ?w2)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-11-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds agent))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-12-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?p) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-13-nd-12-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (> (x_position ?h) (distance ?h ?p))
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (once (agent_holds ?g))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (not (in_motion ?g)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-14-nd-7-rd-14-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?o - desktop)
        (then
          (hold-while (not (in_motion bed)) (in_motion agent))
          (hold (same_color ?o purple))
          (once (not (in_motion ?o)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)





(define (game game-74-15-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (game-conserved
      (exists (?h - hexagonal_bin ?p - pillow)
        (< (distance ?h ?p) 3)
     )
   )
 )
)
(:constraints
  (and
    (preference golfballInBinFromPillow
      (exists (?g - golfball ?h - hexagonal_bin ?p - pillow)
        (then
          (once (and (adjacent ?p agent) (agent_holds ?g) (is_setup_object ?p)))
          (hold (and (in_motion ?g) (not (agent_holds ?g))))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
    (preference throwAttempt
      (exists (?g - golfball)
        (then
          (hold-while (above ?g ?g) (in_motion ?g))
          (hold-while (and (in_motion ?g) (agent_holds ?g)) (forall (?o - west_sliding_door ?t - (either dodgeball cube_block) ?t1 ?l3 ?b - hexagonal_bin) (in_motion ?b)) (not (and (agent_holds agent) (>= (distance ?g agent) 2) (same_color ?g blue))) (touch ?g ?g) (in_motion top_shelf))
          (once (not (not (in_motion ?g))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* 5 (count golfballInBinFromPillow))
)
)



(define (game game-75-0-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?h)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-1-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?h) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-2-nd-7-rd-6-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin:pink) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-3-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (in_motion ?h) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-4-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (not (equal_z_position ?b ?h)) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-5-nd-11-rd-2-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count ballDroppedInBin:hexagonal_bin) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-6-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (in ?h desk)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-7-nd-6-rd-7-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (total-time) 30)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-8-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion rug) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-9-nd-7-rd-14-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b9 - cube_block_yellow ?l3 - flat_block_tan)
        (then
          (hold (< (distance west_wall agent) 1))
          (once (agent_holds agent))
          (once (agent_holds ?l3))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-10-nd-5-rd-8-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (<= 5 23)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-11-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?b agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-12-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?b ?h)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-13-nd-11-rd-2-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt:hexagonal_bin) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-14-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (not (in bed ?h)))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin))
)
)





(define (game game-75-15-nd-6-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference ballDroppedInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference dropAttempt
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (and (adjacent ?h agent) (agent_holds ?b)))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count dropAttempt) 5)
    (>= (count ballDroppedInBin) 1)
 )
)
(:scoring
  (* 5 (count ballDroppedInBin:hexagonal_bin))
)
)



(define (game game-76-0-nd-12-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (exists (?b - game_object ?g ?l - building) (not (in ?g agent))))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?h)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-1-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?d ?b)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?h)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-2-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (touch main_light_switch ?h)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-3-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?l1 - dodgeball)
            (then
              (once (and (agent_holds ?l1) (rug_color_under agent ?x)))
              (hold (and (in_motion ?l1) (not (agent_holds ?l1))))
              (once (not (in_motion ?l1)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-4-nd-23-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds agent))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-5-nd-14-rd-7-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockKnockedFromBuildingInBin:shelf_desk) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-6-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?s - ball)
            (then
              (once (and (agent_holds ?s) (rug_color_under agent ?x)))
              (hold (and (in_motion ?s) (not (agent_holds ?s))))
              (once (not (in_motion ?s)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-7-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - dodgeball ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-8-nd-27-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (object_orientation ?b diagonal) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-9-nd-8-rd-5-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count blockThrowAttempt:white) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-10-nd-14-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion floor))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-11-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:orange))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-12-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?d ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-13-nd-13-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (and (on ?b ?h) (and (in ?d ?b) (in_motion agent))) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-14-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* (count blockKnockedFromBuildingInBin:dodgeball) (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)





(define (game game-76-15-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow))
      (and
        (preference blockToBinFromRug
          (exists (?b - cube_block ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (exists (?bl - building) (and (in ?bl ?b) (in ?h ?bl))))))
           )
         )
       )
        (preference blockThrowAttempt
          (exists (?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent ?x)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (preference blockKnockedFromBuildingInBin
      (exists (?d - dodgeball ?h - hexagonal_bin ?bl - building ?b - block)
        (then
          (once (and (in_motion main_light_switch) (rug_color_under agent yellow) (in ?bl ?b) (in ?h ?bl)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (in ?bl ?b))))
       )
     )
   )
    (preference ballThrowAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (rug_color_under agent yellow)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (and
    (> (count blockThrowAttempt) 18)
    (>= (count ballThrowAttempt) 2)
 )
)
(:scoring
  (+ (* 10 (count-once-per-objects blockToBinFromRug:pink))
    (* 15 (count-once-per-objects blockToBinFromRug:yellow))
    (* 15 (= (count-once-per-objects blockToBinFromRug:yellow) 6)
   )
    (* 15 (<= (count blockThrowAttempt) 18)
      (= (count-once-per-objects blockToBinFromRug) 6)
   )
    (* 20 (count-once-per-objects blockKnockedFromBuildingInBin))
 )
)
)



(define (game game-77-0-nd-5-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance:hexagonal_bin)
)
)





(define (game game-77-1-nd-5-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance:blue)
)
)





(define (game game-77-2-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?h)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-3-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - mug ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-4-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (exists (?t1 - cylindrical_block ?x - color) (in_motion ?h)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-5-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (forall (?o3 - floor) (agent_crouches))))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-6-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (touch bed ?h))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-7-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (and (in ?h ?d) (agent_holds ?d))))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-8-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (hold (touch ?d ?h))
          (hold-while (not (in_motion ?d)) (in_motion agent))
          (hold (in ?d ?h))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-9-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (in_motion room_center) (not (and (in_motion ?h) (on ?h ?d)))))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-10-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - game_object)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-11-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - cube_block_yellow)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-12-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance:teddy_bear)
)
)





(define (game game-77-13-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - chair)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-14-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h desk))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance)
)
)





(define (game game-77-15-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwToBinFromDistance
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once-measure (agent_holds ?d) (distance ?h agent))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count-measure throwToBinFromDistance:hexagonal_bin:laptop)
)
)



(define (game game-78-0-nd-17-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance ?b bed) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-1-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?t - cylindrical_block_blue ?d - beachball ?d - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?ob) (< (distance ?db agent) 1) (object_orientation ?b4 upright)))
          (hold (and (in_motion ?b2) (not (agent_holds ?t)) (not (agent_holds ?h))))
          (once (and (not (in_motion ?s)) (not (in_motion ?w)) (not (object_orientation ?d upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-2-nd-14-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 4)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-3-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?b) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (agent_holds ?t)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-4-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - golfball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-5-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (game_over)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-6-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (< 0.4 (distance ?db ?d))) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-7-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?t)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-8-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (agent_holds rug))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-9-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (forall (?w1 - ramp ?c1 - dodgeball) (and (game_over) (agent_holds ?b) (in_motion ?t) (object_orientation ?t upright))) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-10-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (is_setup_object ?db)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-11-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - book ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-12-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (and (touch ?t west_wall) (in bed ?t))) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-13-nd-13-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (exists (?o - west_sliding_door) (not (and (not (touch ?t ?o)) (exists (?c - cube_block) (agent_holds ?db)) (agent_holds ?b)))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?t upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-14-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?t ?d) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (not (object_orientation ?db upright))))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)





(define (game game-78-15-nd-12-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?t - teddy_bear)
      (game-optional
        (and
          (adjacent_side bed front ?t)
          (adjacent_side bed left ?t)
          (object_orientation ?t upright)
       )
     )
   )
    (exists (?b - beachball)
      (game-optional
        (and
          (< (distance_side bed front ?b) 1)
          (< (distance_side bed left ?b) 1)
          (on floor ?b)
       )
     )
   )
    (forall (?o - (either hexagonal_bin basketball))
      (game-conserved
        (< (distance side_table ?o) 1)
     )
   )
 )
)
(:constraints
  (and
    (preference throwMovesBeachballWithoutKnockingTeddy
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))) (touch ?d ?b) (in_motion ?b))
          (once (and (not (in_motion ?d)) (not (in_motion ?b)) (object_orientation ?t upright)))
       )
     )
   )
    (preference throwKnocksOverBear
      (exists (?d - dodgeball ?b - beachball ?t - teddy_bear ?db - doggie_bed)
        (then
          (once (and (agent_holds ?d) (< (distance ?db agent) 1) (object_orientation ?t upright)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (agent_holds ?t))))
          (once (touch ?d ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 3 (count throwMovesBeachballWithoutKnockingTeddy))
    (- (count throwKnocksOverBear))
 )
)
)



(define (game game-79-0-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - key_chain ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-1-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (not (not (and (in ?g ?h) (adjacent ?h ?g))))) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-2-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (and (and (and (in_motion ?g) (not (agent_holds ?g)) (not (in_motion room_center))) (in_motion ?g)) (between side_table ?h ?g)))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-3-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?h)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-4-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?h))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (open agent)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-5-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (in ?g ?h))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-6-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - chair)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-7-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (forall (?c - doggie_bed ?t - (either hexagonal_bin golfball)) (and (object_orientation ?h sideways) (not (agent_holds top_shelf)))) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-8-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (on ?g ?h))
          (once (< (distance bed ?g) 2))
          (once (in_motion ?g))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-9-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?h)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-10-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (not (< (distance ?g ?h) 1))) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-11-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (on agent ?h) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-12-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (touch ?h ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-13-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds desk)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-14-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?d - hexagonal_bin)
        (then
          (once (agent_holds ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?d ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)





(define (game game-79-15-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwGolfballToBin
      (exists (?g - golfball ?h - hexagonal_bin)
        (then
          (once (in_motion ?g))
          (hold (and (not (agent_holds ?g)) (in_motion ?g)))
          (once (and (not (in_motion ?g)) (in ?h ?g)))
       )
     )
   )
 )
)
(:scoring
  (count throwGolfballToBin)
)
)



(define (game game-80-0-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - triangle_block_tan) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-1-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?c4 - ball ?o5 - pillow)
        (then
          (once (and (agent_holds ?c4) (same_color ?c4 green)))
          (hold (and (in_motion ?c4) (not (agent_holds ?c4))))
          (once (and (not (in_motion ?o5)) (< (distance room_center ?c4) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-2-nd-23-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 white) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-3-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (open ?o))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-4-nd-25-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance desk ?o3) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-5-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (adjacent_side bed front ?o right)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-6-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds floor) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-7-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - golfball) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-8-nd-8-rd-20-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (exists (?p1 - (either game_object shelf_desk tall_rectangular_block_green dodgeball) ?d - triangle_block_blue ?ob - cube_block) (and (in_motion ?ob) (and (on ?o ?d) (agent_holds ?p1)))))
          (once (and (same_type ?o wall) (not (adjacent ?o ?o))))
          (hold (in ?o rug))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-9-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (touch ?o ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-10-nd-8-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once blueObjectMovedToRoomCenter:red:building:triangular_ramp_tan:hexagonal_bin) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-11-nd-20-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (on ?o2 agent) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-12-nd-22-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color room_center desk) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-13-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (toggled_on ?o) (< (distance ?o ?o) 0)))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-14-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance ?o ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count-once tanObjectMovedToRoomCenter))
)
)





(define (game game-80-15-nd-6-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference pinkObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o pink)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1)))
       )
     )
   )
    (preference blueObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o blue)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1)))))
       )
     )
   )
    (preference brownObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o brown)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1)))))
       )
     )
   )
    (preference pillowMovedToRoomCenter
      (exists (?o - pillow)
        (then
          (once (and (agent_holds ?o)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1)))))
       )
     )
   )
    (preference greenObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o green)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1)))))
       )
     )
   )
    (preference tanObjectMovedToRoomCenter
      (exists (?o - game_object)
        (then
          (once (and (agent_holds ?o) (same_color ?o tan)))
          (hold (and (in_motion ?o) (not (agent_holds ?o))))
          (once (and (not (in_motion ?o)) (< (distance room_center ?o) 1) (exists (?o1 ?o2 ?o3 ?o4 ?o5 - game_object) (and (same_color ?o1 pink) (< (distance room_center ?o1) 1) (same_color ?o2 blue) (< (distance room_center ?o2) 1) (same_color ?o3 brown) (< (distance room_center ?o3) 1) (same_type ?o4 pillow) (< (distance room_center ?o4) 1) (same_color ?o5 green) (< (distance room_center ?o5) 1)))))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once pinkObjectMovedToRoomCenter) (count-once blueObjectMovedToRoomCenter) (count-once brownObjectMovedToRoomCenter) (count-once pillowMovedToRoomCenter) (count-once greenObjectMovedToRoomCenter) (count brownObjectMovedToRoomCenter:hexagonal_bin))
)
)



(define (game game-81-0-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (not (and (in_motion agent) (on ?h ?d))))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-1-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h agent)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-2-nd-13-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp dodgeball))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-3-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (in_motion ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-4-nd-11-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (on agent rug))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-5-nd-19-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance bed ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-6-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?r2 desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-7-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - tall_rectangular_block ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-8-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - cube_block ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-9-nd-15-rd-7-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (in ?h ?r1)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-10-nd-21-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h back ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-11-nd-15-rd-7-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (in_motion ?h)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-12-nd-9-rd-1-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin:dodgeball:blue) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-13-nd-6-rd-4-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count-measure dodgeballFromRugToBin:cube_block) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-14-nd-15-rd-3-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?r1 ?r2)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)





(define (game game-81-15-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r1 ?r2 - (either triangular_ramp curved_wooden_ramp))
      (game-conserved
        (and
          (adjacent ?h desk)
          (< (distance ?h ?r1) 1)
          (< (distance ?h ?r2) 1)
          (not
            (exists (?o - game_object)
              (adjacent_side ?h front ?o)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballFromRugToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (count dodgeballFromRugToBin) 3)
)
(:scoring
  (count dodgeballFromRugToBin)
)
)



(define (game game-82-0-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (in_motion bed))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-1-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?h))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-2-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (in_motion ?h))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-3-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin:green)
)
)





(define (game game-82-4-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin:shelf_desk)
)
)





(define (game game-82-5-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?c4 - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?c4 ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-6-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?h) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-7-nd-4-rd-2-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (< (total-time) 30)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-8-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (touch ?h ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-9-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (not (not (in_motion ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-10-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (not (and (forall (?c - sliding_door) (in ?b ?h)) (and (on ?h ?b) (opposite ?b ?h) (= 1 (distance top_shelf ?h)) (adjacent ?b rug))))) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-11-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?x ?x0 - color ?d - cube_block_blue)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?d ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-12-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - doggie_bed ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-13-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?h))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-14-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - watch ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?b) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-82-15-nd-6-rd-15-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?c5 - bridge_block)
        (at-end
          (touch ?c5 ?c5)
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count ballThrownToBin)
)
)



(define (game game-83-0-nd-13-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (and
            (and
              (agent_holds ?h)
              (agent_holds ?c1)
           )
            (and
              (not
                (on ?h bed)
             )
              (and
                (in_motion ?c1)
                (in_motion ?c2)
             )
           )
         )
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-1-nd-6-rd-15-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (count-once ballToBinFromBed:brown))
)
)





(define (game game-83-2-nd-13-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - block)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-3-nd-5-rd-8-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-increasing-measure ballToBinFromBed:bridge_block:hexagonal_bin:floor:tall_cylindrical_block_green) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-4-nd-10-rd-11-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (count ballToBinFromBed:triangular_ramp) (count-once-per-objects ballToBinFromBed:golfball))
 )
)
)





(define (game game-83-5-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in ?b ?h)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-6-nd-13-rd-5-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (adjacent ?h ?c1)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-7-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (in ?b ?h))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-8-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?c1 sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-9-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent floor agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-10-nd-14-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (agent_holds bed))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-11-nd-12-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?c4 - dodgeball)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?b ?c4)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-12-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either golfball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-13-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h upright)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-14-nd-13-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - bridge_block_green)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)





(define (game game-83-15-nd-14-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 - chair)
      (game-conserved
        (and
          (object_orientation ?h sideways)
          (between ?c1 ?h ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballToBinFromBed
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (game_over))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballToBinFromBed:dodgeball) (* (= (count-once-per-objects ballToBinFromBed:dodgeball) 3)
      (count-once-per-objects ballToBinFromBed:golfball)
   )
 )
)
)



(define (game game-85-0-nd-7-rd-6-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once cubeThrownToBin:green:bridge_block_green) 23)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-1-nd-22-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (equal_z_position ?b ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-2-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds agent))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-3-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (is_setup_object ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-4-nd-17-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (in_motion ?b)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-5-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects throwAttempt:orange))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-6-nd-13-rd-2-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count cubeThrownToBin:block)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-7-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (touch ?b ?h)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-8-nd-24-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - hexagonal_bin) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-9-nd-6-rd-20-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference tanObjectMovedToRoomCenter
          (exists (?o - bottom_drawer)
            (then
              (hold (agent_holds ?o))
              (hold (or (agent_holds ?o) (same_color ?o ?x)))
              (hold (not (is_setup_object ?o)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count tanObjectMovedToRoomCenter)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects tanObjectMovedToRoomCenter:tan))
    (* 3 (count-once-per-objects throwAttempt:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-10-nd-9-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - flat_block_gray)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-11-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (same_type side_table triangular_ramp)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-12-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (game_start)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-13-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (agent_holds ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-14-nd-12-rd-3-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?b ?x) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count-once-per-objects throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)





(define (game game-85-15-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference cubeThrownToBin
          (exists (?h - hexagonal_bin ?b - cube_block)
            (then
              (once (and (agent_holds ?b) (rug_color_under agent pink) (same_color ?h purple) (not (exists (?ob - cube_block) (in ?h ?ob)))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
    (forall (?b - cube_block)
      (and
        (preference throwAttempt
          (then
            (once (and (agent_holds ?b) (rug_color_under agent pink)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt)) 1)
    (>= (count-once-per-objects throwAttempt) 6)
 )
)
(:scoring
  (+ (count-once-per-objects cubeThrownToBin:yellow) (* 2 (count-once-per-objects cubeThrownToBin:tan))
    (* 3 (count-once-per-objects cubeThrownToBin:blue))
    (- (count-once-per-objects throwAttempt))
 )
)
)



(define (game game-87-0-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in_motion agent)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-1-nd-9-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - ball)
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-2-nd-9-rd-14-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?b5 ?o1 ?b2 ?h - curved_wooden_ramp)
            (then
              (once (agent_holds ?b2))
              (once (agent_holds ?o1))
              (once (not (not (in_motion ?h))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-3-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug bed)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-4-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - cube_block ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-5-nd-22-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?h))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-6-nd-17-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (and (and (agent_holds ?h) (and (and (between ?o ?h ?h) (< (distance ?o ?h) (distance_side ?h left ?h))) (= 3 (distance ?h ?o)))) (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-7-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* (* 15 (count-once basketMadeFromRug:bridge_block_green))
      (count basketMadeFromRug:green:cube_block_yellow)
   )
 )
)
)





(define (game game-87-8-nd-7-rd-6-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count-overlapping basketMadeFromRug:game_object:beachball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-9-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (agent_holds ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-10-nd-10-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?d - ball)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?d ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-11-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on desk agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-12-nd-19-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (and (in_motion ?h) (in ?o room_center))) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-13-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?w ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)





(define (game game-87-14-nd-6-rd-11-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (adjacent ?h ?w)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (count basketMadeFromRug:dodgeball))
)
)





(define (game game-87-15-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?w - wall)
      (game-conserved
        (and
          (on desk ?h)
          (on ?w ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball block))
      (and
        (preference basketMadeFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (on rug agent)))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (count basketMadeFromRug:dodgeball) (* 2 (count basketMadeFromRug:block))
 )
)
)



(define (game game-88-0-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug ?h) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-1-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - bottom_shelf)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-2-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?p)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-3-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (agent_holds ?b4)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-4-nd-21-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance east_sliding_door agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-5-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (in_motion ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-6-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 1)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-7-nd-15-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d floor) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-8-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (same_type ?d ?h) (in ?d ?h) (agent_holds ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-9-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent ?d agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-10-nd-5-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwAttempt:green)
)
)





(define (game game-88-11-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?c) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (not (agent_holds ?d)) (not (faces agent ?d)))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-12-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (agent_holds ?h)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-13-nd-16-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (< (distance ?d agent) (distance ?d ?c))))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-14-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) (distance ?c ?d))))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-88-15-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?p - pillow ?b1 ?b2 ?b3 ?b4 ?b5 ?b6 - cube_block)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?p diagonal)
          (adjacent_side ?h left ?b1)
          (on bed ?b1)
          (on ?b1 ?b2)
          (on ?b2 ?b3)
          (adjacent_side ?h right ?b4)
          (on bed ?b4)
          (on ?b4 ?b5)
          (on ?b5 ?b6)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 10)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (in_motion ?d)))
       )
     )
   )
    (preference throwAttemptKnocksBlock
      (exists (?d - dodgeball ?c - cube_block)
        (then
          (once (and (agent_holds ?d) (on floor agent) (adjacent rug agent) (> (distance bed agent) 2)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (touch ?d ?c) (in_motion ?c))
          (once (not (in_motion ?d)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once throwAttemptKnocksBlock) 1)
    (>= (total-score) 5)
 )
)
(:scoring
  (count throwFromEdgeOfRug)
)
)



(define (game game-89-0-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (agent_holds ?h) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-1-nd-12-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - bridge_block_pink)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-2-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:bridge_block_pink:tan))
 )
)
)





(define (game game-89-3-nd-12-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?d - chair)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?d ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-4-nd-15-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:red))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-5-nd-14-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (in_motion ?b))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-6-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on agent ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-7-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (touch ?b ?h))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-8-nd-13-rd-5-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (not
            (not
              (not
                (forall (?g - hexagonal_bin)
                  (in_motion ?g)
               )
             )
           )
         )
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-9-nd-5-rd-4-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 60)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-10-nd-21-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug rug)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-11-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:curved_wooden_ramp))
 )
)
)





(define (game game-89-12-nd-12-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:doggie_bed) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-13-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug ?b)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)





(define (game game-89-14-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on rug agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* -2 (- -9 (count-overlapping ballThrownFromRug:dodgeball)) (* 14 (* 4)
     )
      60
   )
 )
)
)





(define (game game-89-15-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - desktop ?h - hexagonal_bin)
      (game-conserved
        (and
          (on desk ?h)
          (not
            (on desk ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownFromRug
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on ?b ?h)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-time) 180)
    (>= (total-score) 10)
 )
)
(:scoring
  (+ (count ballThrownFromRug:dodgeball) (* 2 (count ballThrownFromRug:basketball))
    (* 10 (count ballThrownFromRug:beachball))
 )
)
)



(define (game game-90-0-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch side_table ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-1-nd-12-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (not (and (and (not (in_motion ?d)) (touch ?d room_center)) (agent_holds ?b))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-2-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (adjacent ?d ?b)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-3-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?b)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-4-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (in ?b ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-5-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds agent))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-6-nd-3-rd-3-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed:blue:block)
)
)





(define (game game-90-7-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (in_motion ?b))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-8-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (in_motion ?b)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-9-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (touch ?b agent))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-10-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (hold (is_setup_object ?b))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-11-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch ?d ?b))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-12-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?b))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-13-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?b) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-14-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (object_orientation ?d upside_down) (agent_holds ?b)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)





(define (game game-90-15-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference dodgeballBouncesOnceToDoggieBed
      (exists (?d - dodgeball ?b - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch desk ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (touch floor ?d)))
          (hold (and (in_motion ?d) (not (agent_holds ?d)) (not (touch floor ?d))))
          (once (and (not (in_motion ?d)) (on ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count dodgeballBouncesOnceToDoggieBed)
)
)



(define (game game-93-0-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-1-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (same_color ?h ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-2-nd-5-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin:basketball)
)
)





(define (game game-93-3-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?b - bridge_block)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?b ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-4-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (agent_holds ?d) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-5-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?h)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-6-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?bl - pyramid_block)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?bl ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-7-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - drawer ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-8-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (in_motion ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-9-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (adjacent ?d ?h) (agent_holds ?h) (not (and (and (adjacent ?d ?h) (in_motion ?h)) (on ?h ?d)))))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-10-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - ball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-11-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - (either cd golfball) ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-12-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (not (not (game_over))))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-13-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-14-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (in_motion ?d) (not (in_motion ?d)) (faces ?d ?h)))
          (hold (= 1 (distance ?h ?d)))
          (hold (in ?h ?d))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin)
)
)





(define (game game-93-15-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference throwBallToBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (in ?h ?d)))
       )
     )
   )
 )
)
(:scoring
  (count throwBallToBin:orange)
)
)



(define (game game-94-0-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:building:pink))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-1-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (in ?b ?h) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-2-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count throwAttemptFromDoor:pyramid_block_blue:gray:pyramid_block))
 )
)
)





(define (game game-94-3-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (and (exists (?b8 ?b2 - watch) (in ?b2 ?b8)) (in ?b bed) (and (agent_holds ?b) (in_motion bed) (and (same_color ?b pink) (in_motion rug)))) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-4-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?c2 - drawer)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?c2 ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-5-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent rug ?h)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-6-nd-9-rd-15-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?l2 - pencil ?h - dodgeball)
            (then
              (once (and (agent_holds ?b) (equal_z_position ?b ?h) (agent_holds bottom_shelf)))
              (once (and (agent_holds ?b) (agent_crouches)))
              (once (or (agent_holds room_center)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-7-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_crouches) (faces bed agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-8-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?c3 - triangle_block_blue)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?b ?c3)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-9-nd-21-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (in_motion ?h))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-10-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:red))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-11-nd-8-rd-2-rs-terminal-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor:tall_rectangular_block) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-12-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (not (not (and (in ?b west_sliding_door) (and (agent_holds ?b))))) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-13-nd-18-rd-6-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (in_motion ?b) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-14-nd-19-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (agent_holds ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)





(define (game game-94-15-nd-16-rd-8-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (forall (?b - (either dodgeball golfball))
      (and
        (preference ballThrownFromDoor
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (adjacent door agent)))
              (hold (and (in_motion ?h) (and (not (< (distance ?h ?b) (distance room_center ?h))) (in_motion ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromDoor
          (then
            (once (and (agent_holds ?b) (adjacent door agent)))
            (hold (and (in_motion ?b) (not (agent_holds ?b))))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttemptFromDoor) 8)
)
(:scoring
  (+ (* 3 (count ballThrownFromDoor:dodgeball))
    (* 6 (count ballThrownFromDoor:golfball))
 )
)
)



(define (game game097-97-0-nd-17-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (in_motion ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-1-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on desk ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-2-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on ?d agent))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-3-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (agent_holds door))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-4-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (and (touch east_wall ?d) (above ?d agent)))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-5-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (agent_holds ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-6-nd-5-rd-1-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 30)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-7-nd-4-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug:bridge_block)
)
)





(define (game game097-97-8-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (agent_holds ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-9-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (on ?d ?d) (or (in_motion agent) (and (in_motion ?d) (not (on ?d ?d))))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-10-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion agent) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-11-nd-15-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (and (not (and (exists (?y ?y0 - orientation ?g - dodgeball) (on bed ?g)) (and (not (on ?d ?d)) (in_motion ?d)))) (in ?d ?d))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-12-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (once (on ?d agent))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-13-nd-11-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (on ?d ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-14-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (same_color ?d ?d)) (on rug ?d)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)





(define (game game097-97-15-nd-17-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToRug
      (exists (?d - dodgeball_red)
        (then
          (once (and (agent_holds ?d) (not (on rug agent))))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d)) (on agent floor)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 60)
)
(:scoring
  (count ballThrownToRug)
)
)



(define (game game0-98-0-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (is_setup_object desk))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-1-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* -12 (count-once-per-objects ballThrownToBin:shelf))
 )
)
)





(define (game game0-98-2-nd-8-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?d - watch)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?h) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?h) (not (agent_holds ?h))))
              (once (and (not (in_motion ?h)) (in ?h ?d)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-3-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (on ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-4-nd-6-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - teddy_bear)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?o) (not (agent_holds ?o))))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-5-nd-9-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:rug) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-6-nd-18-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (equal_z_position ?b ?h)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-7-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:flat_block_yellow))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-8-nd-12-rd-11-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (once (in_motion ?h))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-9-nd-11-rd-6-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:pyramid_block))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-10-nd-20-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (agent_holds ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-11-nd-9-rd-16-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?c3 - game_object)
            (at-end
              (and
                (on ?b ?c3)
                (> 10 (distance ?b ?c3))
                (agent_holds ?b)
             )
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-12-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* -3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-13-nd-11-rd-8-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (in_motion ?h)
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-14-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:doggie_bed))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)





(define (game game0-98-15-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (not
          (exists (?s - shelf)
            (above ?h ?s)
         )
       )
     )
   )
    (forall (?b - ball)
      (game-optional
        (on bed ?b)
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - ball)
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (or (on bed agent) (adjacent bed agent))))
              (hold (and (same_type ?h ?b) (agent_holds ?h) (in_motion ?h) (in ?b ?h) (in bed floor) (same_color ?b orange) (and (and (adjacent ?b ?h) (above ?h ?b)) (and (and (in_motion ?b) (in_motion ?b)) (touch ?h desk)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (total-score) 6)
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin:beachball) (* 2 (count-once-per-objects ballThrownToBin:basketball))
    (* 3 (count-once-per-objects ballThrownToBin:dodgeball))
 )
)
)



(define (game game-99-0-nd-10-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (not (opposite bottom_shelf ?c))))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-1-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?s)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-2-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - tall_rectangular_block_tan)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-3-nd-12-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (in_motion ?c))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-4-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?b - hexagonal_bin ?s - shelf)
        (then
          (once (and (agent_holds ?s) (adjacent bed agent)))
          (hold (and (in_motion ?s) (not (agent_holds ?s))))
          (once (and (not (in_motion ?s)) (on ?s ?b)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-5-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent ?s ?c)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-6-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (in_motion side_table))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-7-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (on ?s ?c) (game_over) (in ?c agent)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-8-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - book)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-9-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed south_wall)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-10-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (adjacent agent ?c))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-11-nd-10-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (hold-while (in ?c bottom_shelf) (and (and (forall (?r - curved_wooden_ramp) (on ?c ?r)) (agent_holds ?c) (touch ?s side_table)) (and (agent_holds ?c) (on ?s ?c) (agent_holds ?c) (>= (distance room_center ?c) 0))) (not (forall (?b - cube_block_yellow ?h - (either game_object bridge_block_pink triangular_ramp_green)) (< 1 1))))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-12-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?r - dodgeball ?s - shelf)
        (then
          (once (and (agent_holds ?s) (adjacent bed agent)))
          (hold (and (in_motion ?s) (not (agent_holds ?s))))
          (once (and (not (in_motion ?s)) (on ?r ?s)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-13-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (not (forall (?l2 - block ?g - (either bottom_shelf triangular_ramp_tan building)) (not (touch ?c room_center))))))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-14-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (< 0.7 0.4))
          (once (on ?s ?c))
          (once (touch ?s room_center))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)





(define (game game-99-15-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference cubeBlockFromBedToShelf
      (exists (?c - cube_block ?s - shelf)
        (then
          (once (and (agent_holds ?c) (adjacent bed desk)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (and (not (in_motion ?c)) (on ?s ?c)))
       )
     )
   )
    (preference cubeBlockThrowAttempt
      (exists (?c - cube_block)
        (then
          (once (and (agent_holds ?c) (adjacent bed agent)))
          (hold (and (in_motion ?c) (not (agent_holds ?c))))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (>= (count cubeBlockThrowAttempt) 3)
)
(:scoring
  (count cubeBlockFromBedToShelf)
)
)



(define (game game-100-0-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on room_center ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-1-nd-23-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on north_wall ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-2-nd-23-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?d ?t))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-3-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on agent ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-4-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (on ?t ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-5-nd-20-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (in ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-6-nd-13-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (exists (?h - alarm_clock ?b - side_table) (in ?b ?d)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-7-nd-21-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?t)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-8-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?h)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-9-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (agent_holds ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-10-nd-16-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:book))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-11-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:tan))
 )
)
)





(define (game game-100-12-nd-6-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?h - shelf)
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?h ?d) (on ?h ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-13-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* (count dodgeballFromDeskToTarget:pink:green:orange:orange) (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-14-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (external-forall-maximize (count dodgeballFromDeskToTarget:hexagonal_bin)))
    (* 3 (count dodgeballFromDeskToTarget:hexagonal_bin))
 )
)
)





(define (game game-100-15-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?d - doggie_bed)
      (game-conserved
        (and
          (on floor ?d)
          (on bed ?h)
          (equal_z_position ?h ?d)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?t - (either hexagonal_bin doggie_bed))
      (and
        (preference dodgeballFromDeskToTarget
          (exists (?d - dodgeball)
            (then
              (once (and (agent_holds ?d) (adjacent desk agent)))
              (hold (and (in_motion ?d) (not (agent_holds ?d))))
              (once (and (not (in_motion ?d)) (or (in ?t ?d) (on ?t ?d))))
           )
         )
       )
     )
   )
 )
)
(:scoring
  (+ (* 2 (count dodgeballFromDeskToTarget:doggie_bed))
    (* 3 (count-once-per-objects dodgeballFromDeskToTarget:purple))
 )
)
)



(define (game game-101-0-nd-25-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h west_wall) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-1-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?d - ball)
      (game-conserved
        (on bed ?d)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-2-nd-16-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between ?c1 ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-3-nd-9-rd-8-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 -8)
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-4-nd-20-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance agent ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-5-nd-15-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - basketball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-6-nd-9-rd-12-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (count-shortest throwAttemptFromBehindBlock:tan:drawer))
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-7-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (in ?c3 west_wall)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-8-nd-10-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* -1 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-9-nd-11-rd-2-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count ballThrownFromBehindBlock:drawer) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-10-nd-16-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (in_motion ?b) (< (distance floor ?b) (distance ?b ?h)) (on ?b ?c) (in_motion ?c)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-11-nd-17-rd-4-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count throwAttemptFromBehindBlock:cube_block:wall) 2)
   )
 )
)
)





(define (game game-101-12-nd-20-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (not (<= (building_size ?h) 1)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-13-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c2)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-14-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* (count ballThrownFromBehindBlock:basketball) (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)





(define (game game-101-15-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (on bed ?h)
     )
   )
    (exists (?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent bed ?r)
          (faces ?r desk)
       )
     )
   )
    (exists (?c1 ?c2 - cube_block_blue ?c3 ?c4 - cube_block_yellow)
      (game-conserved
        (and
          (= (distance desk ?c1) 1)
          (= (distance desk ?c2) 1)
          (= (distance desk ?c3) 2)
          (= (distance desk ?c4) 2)
          (between desk ?c1 ?c3)
          (between desk ?c2 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?c - (either cube_block_blue cube_block_yellow))
      (and
        (preference ballThrownFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (on ?h ?b) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttemptFromBehindBlock
          (exists (?b - ball ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (is_setup_object ?c) (>= (distance ?h agent) (distance ?c ?h))))
              (hold (and (in_motion ?b) (not (agent_holds ?b))))
              (once (and (not (in_motion ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttemptFromBehindBlock) 2)
    (>= (total-score) 50)
 )
)
(:scoring
  (+ (* 10 (count ballThrownFromBehindBlock:cube_block_blue))
    (* 5 (count ballThrownFromBehindBlock:cube_block_yellow))
    (* 30 (= (count ballThrownFromBehindBlock:cube_block_blue) 2)
   )
    (* 15 (= (count ballThrownFromBehindBlock:cube_block_yellow) 2)
   )
 )
)
)



(define (game game-103-0-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (not (not (in ?d ?d))))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-1-nd-13-rd-1-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom:hexagonal_bin:purple))
 )
)
)





(define (game game-103-2-nd-6-rd-15-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?c3 - (either game_object dodgeball basketball tall_rectangular_block_blue) ?l3 - hexagonal_bin)
        (at-end
          (in ?l3 bed)
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-3-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?d ?h))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-4-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?d ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-5-nd-5-rd-5-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ -6 (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-6-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (and (in ?d ?d) (not (and (in_motion ?d) (and (not (in_motion ?d)) (in_motion ?d))))) (not (adjacent ?d ?d)) (in_motion agent)))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-7-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?h) (in_motion ?d)))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-8-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (in ?d ?h) (not (in_motion door)) (on ?h ?d) (on ?h ?d)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-9-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (and (not (exists (?c - bottom_drawer) (in_motion ?c))) (< 1 (distance ?d ?h)) (< 1 (distance rug ?h)) (agent_holds ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-10-nd-3-rd-11-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* (count dodgeballHitsBinBottom:blue:hexagonal_bin) (count dodgeballHitsBin:bridge_block_pink))
)
)





(define (game game-103-11-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (= 6 1 (distance ?h ?d) (distance ?d agent)))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-12-nd-5-rd-1-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 6)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-13-nd-3-rd-11-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (* (count-once dodgeballHitsBin:pencil:tan))
)
)





(define (game game-103-14-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (and (agent_holds ?d) (agent_holds ?d))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)





(define (game game-103-15-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (on bed ?h)
          (object_orientation ?h sideways)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference dodgeballHitsBin
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (agent_holds ?d)) (not (in ?h ?d))) (touch ?h ?d))
          (once (and (not (in_motion ?d)) (not (in ?h ?d))))
       )
     )
   )
    (preference dodgeballHitsBinBottom
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?d))
          (hold-while (and (in_motion ?d) (not (in ?d ?h))) (in ?h ?d))
          (once (and (not (in_motion ?d))))
       )
     )
   )
    (preference throwAttempt
      (exists (?d - dodgeball)
        (then
          (once (agent_holds ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (and (not (in_motion ?d))))
       )
     )
   )
 )
)
(:terminal
  (>= (count throwAttempt) 10)
)
(:scoring
  (+ (count dodgeballHitsBin) (* 2 (count dodgeballHitsBinBottom))
 )
)
)



(define (game game-104-0-nd-12-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (on ?h ?d))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-1-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (and (adjacent ?h ?d) (and (not (or (in ?d ?h) (and (on ?h ?d) (in_motion ?d)))) (not (in ?d ?h)))))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-2-nd-12-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (agent_holds ?d))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-3-nd-7-rd-11-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (in_motion ?h)
          (adjacent desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-4-nd-15-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-5-nd-13-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (not
            (agent_holds south_wall)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-6-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - (either pencil golfball_orange block) ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-7-nd-7-rd-14-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d2 - ball)
        (at-end
          (adjacent_side ?d2 right ?d2)
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-8-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - sliding_door)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-9-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent top_shelf agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-10-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (on ?h ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-11-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (not (toggled_on ?h)))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-12-nd-16-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position ?h ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-13-nd-18-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent ?h agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-14-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?h) (adjacent rug agent)))
          (hold (and (in_motion ?d) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)





(define (game game-104-15-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (equal_x_position east_sliding_door ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference throwFromEdgeOfRug
      (exists (?d - dodgeball ?h - hexagonal_bin)
        (then
          (once (and (agent_holds ?d) (adjacent rug agent)))
          (hold (and (in_motion ?h) (not (agent_holds ?d))))
          (once (in ?h ?d))
       )
     )
   )
 )
)
(:terminal
  (>= (total-time) 300)
)
(:scoring
  (count throwFromEdgeOfRug)
)
)



(define (game game-105-0-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (exists (?c6 - triangle_block_tan ?r2 - dodgeball_pink ?g - cube_block) (agent_holds ?b)) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-1-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue tall_rectangular_block)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-2-nd-8-rd-21-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (object_orientation ?b upright))
          (hold (exists (?t2 - pyramid_block_yellow) (in agent ?b)))
          (once (and (agent_holds room_center) (and (in ?b ?b) (in_motion ?b)) (in desk ?b)))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-3-nd-11-rd-11-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (adjacent ?b ?b))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-4-nd-17-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on ?b ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-5-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (and
              (in_motion ?d)
              (in_motion ?s)
           )
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-6-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on west_wall ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-7-nd-15-rd-7-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< 9 (distance ?b ?c))))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-8-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on top_drawer ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-9-nd-13-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (agent_holds ?o)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-10-nd-17-rd-12-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (equal_z_position ?b ?c))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-11-nd-19-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?o - dodgeball) (on rug ?o)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-12-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?b ?d - side_table)
          (above ?d desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-13-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either beachball cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-14-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o ?o)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (forall (?c - (either cube_block_blue cube_block_yellow)) (on rug ?c)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)





(define (game game-105-15-nd-15-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (or
          (on bed ?c)
          (adjacent bed ?c)
       )
     )
   )
    (forall (?c - cube_block)
      (game-optional
        (on rug ?c)
     )
   )
    (game-optional
      (not
        (exists (?o - game_object)
          (above ?o desk)
       )
     )
   )
    (forall (?d - dodgeball)
      (game-conserved
        (not
          (exists (?s - shelf)
            (on ?s ?d)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference woodenBlockMovedFromRugToDesk
      (exists (?b - cube_block_tan)
        (then
          (once (and (and (in_motion ?b) (in_motion ?b)) (on rug ?b)))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (or (on rug ?c) (agent_holds ?c) (in_motion ?c) (< (distance desk ?c) 1) (exists (?c2 - (either cube_block_blue cube_block_yellow)) (and (not (same_object ?c ?c2)) (< (distance ?c ?c2) 0.5) (on floor ?c) (on floor ?c2))))))
          (hold (forall (?c - (either cube_block_blue cube_block_yellow)) (< (distance desk ?c) 1)))
          (once (above ?b desk))
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects woodenBlockMovedFromRugToDesk)
)
)



(define (game game-106-0-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (not (agent_holds ?b))))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-1-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (open ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-2-nd-8-rd-1-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 12)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-3-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (in ?b agent) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-4-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?c - dodgeball)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (not (in_motion ?c)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-5-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion north_wall)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-6-nd-16-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion agent)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-7-nd-13-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (exists (?h - triangle_block_green ?f - golfball_orange) (not (on ?f ?b))) (not (in ?h ?b))))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-8-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (>= (distance_side ?h left ?h back) (distance_side ?h right ?h)))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-9-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?h)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-10-nd-5-rd-8-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (<= (* (count-once-per-objects throwAttempt:bed:building) (* (count-once-per-external-objects throwAttempt:dodgeball_pink) 30)
        (* (count throwAttempt:book) (count throwAttempt:red))
        (count throwInBin:block)
     )
      4
   )
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-11-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion agent)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-12-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - building ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-13-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (agent_holds agent)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-14-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (on ?b ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)





(define (game game-106-15-nd-17-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:constraints
  (and
    (preference throwInBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?h))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in room_center ?b)))
       )
     )
   )
    (preference throwAttempt
      (exists (?b - ball)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (not (in_motion ?b)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (total-score) 6)
    (>= (count throwAttempt) 15)
 )
)
(:scoring
  (count throwInBin)
)
)



(define (game game-108-0-nd-19-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= 7 (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-1-nd-17-rd-3-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?h ?b3)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?p1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-2-nd-23-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> 4 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-3-nd-12-rd-12-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (not (not (and (agent_holds ?b) (<= (distance bed ?b) (distance ?d bed)) (< (distance ?h ?b) (distance ?d ?b))))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-4-nd-16-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d ?d) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-5-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - hexagonal_bin ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-6-nd-20-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (same_type ?c hexagonal_bin))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-7-nd-18-rd-3-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?p1 ?p2)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-8-nd-20-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on desk ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-9-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - dodgeball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-10-nd-7-rd-6-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-objects ballInOrOnBin:green)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-11-nd-25-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b ?d) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-12-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - bridge_block ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-13-nd-9-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* (* 10 (* (count throwKnocksBlock:game_object:game_object:desktop) -9)
     )
      (count-once-per-external-objects ballInOrOnBin:dodgeball)
   )
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-14-nd-10-rd-7-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b1 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-same-positions agentLeavesDogbedOrNoMoreBalls:pink:green))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)





(define (game game-108-15-nd-19-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?b1 ?b2 - tall_cylindrical_block ?p1 ?p2 - pyramid_block ?b3 - cylindrical_block)
      (and
        (game-conserved
          (and
            (on side_table ?b3)
            (on bed ?b1)
            (on ?b1 ?p1)
            (on bed ?b2)
            (on ?p2 ?b2)
            (adjacent ?b1 north_wall)
            (between ?b2 ?h ?b2)
            (= (distance ?b1 ?h) (distance ?b2 ?h))
         )
       )
        (game-optional
          (and
            (on bed ?h)
            (equal_z_position bed ?h)
         )
       )
     )
   )
    (exists (?d - doggie_bed)
      (forall (?b - ball)
        (game-optional
          (or
            (on ?d ?b)
            (< (distance ?d ?b) 0.5)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference agentLeavesDogbedOrNoMoreBalls
      (exists (?d - doggie_bed)
        (then
          (once (> (distance ?d agent) 1))
          (hold-while (<= (distance ?d agent) 1) (exists (?b - ball) (agent_holds ?b)))
          (once (or (> (distance ?d agent) 1) (forall (?b - ball) (and (not (in_motion ?b)) (> (distance ?b agent) 1)))))
       )
     )
   )
    (forall (?c - (either cylindrical_block tall_cylindrical_block pyramid_block))
      (and
        (preference throwKnocksBlock
          (exists (?b - ball ?d - doggie_bed)
            (then
              (once (and (is_setup_object ?c) (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold-while (and (in_motion ?b) (not (agent_holds ?b))) (touch ?b ?c) (in_motion ?c))
              (once (not (in_motion ?b)))
           )
         )
       )
     )
   )
    (forall (?b - ball)
      (and
        (preference ballInOrOnBin
          (exists (?d - doggie_bed ?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?b) (<= (distance ?d agent) 1)))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (or (in ?h ?b) (on ?h ?b))))
           )
         )
       )
     )
   )
 )
)
(:terminal
  (>= (count-once agentLeavesDogbedOrNoMoreBalls) 1)
)
(:scoring
  (+ (* 3 (count-once-per-external-objects throwKnocksBlock:pyramid_block))
    (* -3 (count-once-per-external-objects throwKnocksBlock:tall_cylindrical_block))
    (count-once-per-external-objects throwKnocksBlock:cylindrical_block)
    (* 2 (count-once-per-external-objects ballInOrOnBin:dodgeball))
    (* 2 (count-once-per-external-objects ballInOrOnBin:basketball))
    (* 4 (count-once-per-external-objects ballInOrOnBin:beachball))
 )
)
)



(define (game game-109-0-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - shelf)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-1-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (agent_holds agent))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-2-nd-9-rd-1-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects cubeBlockThrownToTopShelf:pink) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-3-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (on ?b ?h)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-4-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (adjacent ?p ?d)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-5-nd-6-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count ballThrownToBin:yellow))
)
)





(define (game game-109-6-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?c2 - room_center ?d - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?d)) (in_motion ?d)))
          (once (and (not (in_motion ?d)) (on ?d ?c2)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-7-nd-6-rd-4-rs-scoring-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-same-positions cubeBlockThrownToTopShelf:block))
)
)





(define (game game-109-8-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (exists (?o2 - dodgeball) (and (in desk ?o2) (equal_z_position ?c ?o2))))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-9-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (= (distance ?h desk) 3) (equal_z_position ?b ?h)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-10-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (same_type ?c beachball)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-11-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (in ?b ?h))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-12-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (agent_holds ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-13-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?p))
          (hold (and (not (agent_holds ?p)) (touch south_wall ?d)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-14-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (agent_holds ?d))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)





(define (game game-109-15-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain many-objects-room-v1)
(:constraints
  (and
    (preference ballThrownToBin
      (exists (?b - ball ?h - hexagonal_bin)
        (then
          (once (agent_holds ?b))
          (hold (and (not (agent_holds ?b)) (in_motion ?b)))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
    (preference cubeBlockThrownToTopShelf
      (exists (?c - cube_block)
        (then
          (once (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (and (not (in_motion ?c)) (on top_shelf ?c)))
       )
     )
   )
    (preference pillowThrownToDoggieBed
      (exists (?p - pillow ?d - doggie_bed)
        (then
          (once (not (in_motion agent)))
          (hold (and (not (agent_holds ?p)) (in_motion ?p)))
          (once (and (not (in_motion ?p)) (on ?d ?p)))
       )
     )
   )
 )
)
(:scoring
  (+ (count-once-per-objects ballThrownToBin) (count-once-per-objects cubeBlockThrownToTopShelf) (count-once-per-objects pillowThrownToDoggieBed))
)
)



(define (game game-110-0-nd-11-rd-5-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwFromBehindChairsInBin:gray) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-1-nd-14-rd-13-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (< (distance ?o west_sliding_door) (building_size ?o)))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-2-nd-13-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock pyramid_block_yellow))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-3-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?l3 - mug)
            (then
              (once (and (agent_holds ?l3) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?l3)) (in_motion ?l3)))
              (once (and (not (in_motion ?l3)) (in ?l3 ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-4-nd-17-rd-10-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (and (and (in ?o ?o) (agent_holds ?o)) (in_motion ?o) (< (distance ?o ?o) (distance ?o ?o)) (not (is_setup_object ?o)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-5-nd-19-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (in ?c ?o))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-6-nd-24-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - shelf) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-7-nd-9-rd-5-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o2 - dodgeball)
      (game-optional
        (adjacent ?o2 desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-8-nd-6-rd-10-rs-terminal-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (>= (count throwFromBehindChairsInBin:hexagonal_bin) 15)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-9-nd-7-rd-10-rs-scoring-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (+ (- (count throwAttempt:rug))
      (* (count-once-per-objects throwFromBehindChairsInBin:yellow) (count-once-per-objects throwFromBehindChairsInBin:bottom_drawer) 5)
   )
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-10-nd-18-rd-9-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?d - building) (opposite ?d ?o))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-11-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?f - teddy_bear)
      (game-conserved
        (and
          (adjacent south_wall ?f)
          (adjacent west_wall ?f)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-12-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock flat_block_tan))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-13-nd-15-rd-8-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (< (distance agent ?o) 7) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-14-nd-26-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position ?o) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)





(define (game game-110-15-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (forall (?c - chair)
      (game-conserved
        (equal_x_position door ?c)
     )
   )
    (exists (?h - hexagonal_bin)
      (game-conserved
        (and
          (adjacent south_wall ?h)
          (adjacent west_wall ?h)
       )
     )
   )
    (forall (?o - (either dodgeball cube_block alarm_clock book))
      (game-optional
        (adjacent ?o desk)
     )
   )
 )
)
(:constraints
  (and
    (forall (?o - (either doggie_bed cube_block alarm_clock book))
      (and
        (preference throwFromBehindChairsInBin
          (exists (?h - hexagonal_bin)
            (then
              (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
              (hold (and (not (agent_holds ?o)) (in_motion ?o)))
              (once (and (not (in_motion ?o)) (in ?h ?o)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (agent_holds ?o) (forall (?c - chair) (> (x_position agent) (x_position ?c)))))
            (hold (and (not (agent_holds ?o)) (in_motion ?o)))
            (once (not (in_motion ?o)))
         )
       )
     )
   )
 )
)
(:terminal
  (or
    (> (external-forall-maximize (count throwAttempt:dodgeball)) 3)
    (> (external-forall-maximize (count throwAttempt:cube_block)) 1)
    (> (count throwAttempt:book) 1)
    (> (count throwAttempt:alarm_clock) 1)
 )
)
(:scoring
  (+ (* 8 (count throwFromBehindChairsInBin:dodgeball))
    (* 5 (count throwFromBehindChairsInBin:cube_block))
    (* 20 (count throwFromBehindChairsInBin:alarm_clock))
    (* 50 (count throwFromBehindChairsInBin:book))
 )
)
)



(define (game game-113-0-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (adjacent ?r ?c2)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-1-nd-9-rd-9-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (not
          (on ?c1 ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-2-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - block ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-3-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c4 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-4-nd-13-rd-4-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (agent_holds ?r)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-5-nd-8-rd-5-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?l2 - wall)
        (then
          (once (agent_holds ?l2))
          (hold-while (and (not (agent_holds ?l2)) (in_motion ?l2)) (on ?l2 ?l2) (on ?l2 ?l2) (on ?l2 ?l2))
          (once (and (not (in_motion ?l2)) (in ?l2 ?l2)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-6-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (in_motion ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-7-nd-8-rd-13-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (in_motion ?h))
          (once (and (agent_holds ?c2) (and (and (or (in ?r ?c1)) (in_motion bottom_shelf)) (adjacent ?h ?c2)) (on door ?c2)))
          (hold-while (agent_holds ?c2) (in ?b ?c2))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-8-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - tall_cylindrical_block ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-9-nd-17-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h left ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-10-nd-14-rd-3-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (agent_holds bed) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?r)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-11-nd-11-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - book ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-12-nd-15-rd-2-rs-constraints-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on bed ?h) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?c1 ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-13-nd-16-rd-1-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?c2 front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c4 ?c1)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-14-nd-10-rd-8-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - cube_block ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (in_motion ?r)
          (and
            (on rug ?c4)
            (adjacent_side ?r front ?c4)
            (agent_holds ?c3)
         )
          (and
            (not
              (agent_holds ?h)
           )
            (not
              (broken ?c1)
           )
         )
          (agent_holds ?r)
          (agent_holds ?c2)
          (in_motion ?h)
          (agent_holds ?c4)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)





(define (game game-113-15-nd-10-rd-2-rs-setup-sk-prior5-nr-1) (:domain few-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?c1 ?c2 ?c3 ?c4 - pyramid_block_yellow ?r - curved_wooden_ramp)
      (game-conserved
        (and
          (adjacent_side ?h front ?c1)
          (adjacent ?c1 ?c3)
          (between ?h ?c1 ?c3)
          (on ?c1 ?c2)
          (on ?c3 ?c4)
          (adjacent_side ?r back ?c3)
          (between ?r ?c3 ?c1)
       )
     )
   )
 )
)
(:constraints
  (and
    (preference ballThrownThroughRampAndBlocksToBin
      (exists (?b - ball ?r - curved_wooden_ramp ?h - hexagonal_bin ?c1 ?c2 - cube_block)
        (then
          (once (agent_holds ?b))
          (hold-while (and (not (agent_holds ?b)) (in_motion ?b)) (on ?r ?b) (on ?c1 ?b) (on ?c2 ?b))
          (once (and (not (in_motion ?b)) (in ?h ?b)))
       )
     )
   )
 )
)
(:scoring
  (count ballThrownThroughRampAndBlocksToBin)
)
)



(define (game game-114-0-nd-7-rd-5-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - credit_card ?o4 - laptop)
      (game-conserved
        (< (distance room_center ?c) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-1-nd-14-rd-7-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (not
                (on ?o ?b)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-2-nd-19-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?b)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-3-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance agent agent) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-4-nd-15-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (agent_holds ?d)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-5-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?t - (either bed cylindrical_block) ?b - building)
        (at-end
          (and
            (not
              (same_object ?t ?b)
           )
            (in ?b ?o)
            (in ?b ?o)
            (on floor ?b)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-6-nd-20-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - pyramid_block)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-7-nd-12-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - pyramid_block_red)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-8-nd-8-rd-10-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-optional
        (touch agent ?d)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-9-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - (either book block) ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-10-nd-12-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (and
              (or
                (or
                  (and
                    (not
                      (agent_holds ?b)
                   )
                    (agent_holds room_center)
                    (< (distance_side ?o front ?d) (distance rug ?o))
                    (same_object ?b ?o)
                 )
                  (in ?o ?d)
               )
             )
              (in_motion ?d)
           )
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-11-nd-6-rd-12-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?b1 - hexagonal_bin ?g - hexagonal_bin ?b - hexagonal_bin ?h - dodgeball_pink)
      (game-optional
        (in door ?h)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-12-nd-14-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in rug ?d)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-13-nd-14-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (agent_holds ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-14-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (in ?b ?d)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?b5 - dodgeball)
                (touch ?b ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)





(define (game game-114-15-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?d - doggie_bed)
      (game-conserved
        (< (distance room_center ?d) 0.5)
     )
   )
 )
)
(:constraints
  (and
    (preference objectInBuilding
      (exists (?o - game_object ?d - doggie_bed ?b - building)
        (at-end
          (and
            (not
              (same_object ?o ?d)
           )
            (faces ?o ?b)
            (in ?b ?o)
            (on floor ?d)
            (not
              (on floor ?o)
           )
            (not
              (exists (?w - wall)
                (touch ?w ?o)
             )
           )
         )
       )
     )
   )
 )
)
(:scoring
  (count-once-per-objects objectInBuilding)
)
)



(define (game game-115-0-nd-10-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (not (agent_holds ?t)))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?c)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-1-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?o - desktop)
        (then
          (once (on ?o ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-2-nd-11-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (agent_holds ?c))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-3-nd-13-rd-12-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (in ?r ?h)
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-4-nd-13-rd-12-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (agent_holds ?r)
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-5-nd-13-rd-12-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (<= 5 (distance ?h ?r))
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-6-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (in_motion ?c))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-7-nd-9-rd-3-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?b - flat_block_yellow)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?b ?c ?r)
            (forall (?b - ball)
              (< (distance ?r ?b) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-8-nd-6-rd-15-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?l2 - key_chain ?h - dodgeball)
        (at-end
          (object_orientation ?h upright)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-9-nd-9-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearLandsInBin:wall:orange)
 )
)
)





(define (game game-115-10-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?l1 - desktop)
        (then
          (once (on ?l1 ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-11-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?o5 - triangle_block_green ?b - ball ?c - chair)
        (then
          (once (on ?b ?c))
          (hold (agent_holds ?c))
          (hold (and (not (agent_holds ?c)) (in_motion ?c)))
          (once (touch ?o5 ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-12-nd-11-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - pyramid_block_blue ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-13-nd-24-rd-1-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?c ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-14-nd-16-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?t ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (in ?r ?c)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count teddyBearLandsInBin))
    (count teddyBearHitsBall)
 )
)
)





(define (game game-115-15-nd-9-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?c - chair ?r - triangular_ramp ?t - teddy_bear ?h - hexagonal_bin)
      (and
        (game-conserved
          (and
            (< (distance room_center ?r) 0.5)
            (adjacent_side ?r front ?c)
            (between ?h ?c ?r)
            (forall (?b - ball)
              (< (distance ?b ?h) 1)
           )
         )
       )
        (game-optional
          (and
            (on ?c ?t)
         )
       )
     )
   )
 )
)
(:constraints
  (and
    (preference teddyBearLandsInBin
      (exists (?t - teddy_bear ?h - hexagonal_bin ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (and (not (in_motion ?t)) (in ?h ?t)))
       )
     )
   )
    (preference teddyBearHitsBall
      (exists (?t - teddy_bear ?b - ball ?c - chair)
        (then
          (once (on ?c ?t))
          (hold (agent_holds ?t))
          (hold (and (not (agent_holds ?t)) (in_motion ?t)))
          (once (touch ?t ?b))
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 0.3)
    (count teddyBearHitsBall)
 )
)
)



(define (game game-116-0-nd-19-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?b ?h)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-1-nd-16-rd-2-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on ?h ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-2-nd-18-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in_motion ?h)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-3-nd-17-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (faces agent ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-4-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (not (agent_holds mirror))))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-5-nd-10-rd-14-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?o - teddy_bear)
            (then
              (once (on ?b ?o))
              (hold (exists (?db - cube_block_yellow) (in_motion desk)))
              (once (<= (distance ?b ?o) 1))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-6-nd-18-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?h))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-7-nd-8-rd-4-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count-unique-positions throwAttempt:game_object)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-8-nd-15-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (not (on bed ?b))) (or (not (agent_holds bed)) (and (not (touch agent ?h)) (agent_holds ?b)) (and (not (and (agent_holds ?b) (agent_holds ?b)))))))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-9-nd-15-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in ?b top_shelf)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-10-nd-13-rd-5-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (not
            (agent_holds ?h)
         )
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-11-nd-15-rd-9-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (agent_holds ?b))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-12-nd-14-rd-4-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (in_motion ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-13-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (adjacent agent ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-14-nd-12-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (not (agent_holds ?b)) (in_motion ?b)))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (and (not (in ?b ?b)) (same_type ?b golfball_white) (in ?b ?b)))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)





(define (game game-116-15-nd-16-rd-8-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin)
      (game-conserved
        (or
          (on bed ?h)
          (on desk ?h)
       )
     )
   )
 )
)
(:constraints
  (and
    (forall (?b - (either basketball dodgeball))
      (and
        (preference ballThrownToBin
          (exists (?h - hexagonal_bin)
            (then
              (once (agent_holds ?b))
              (hold (and (and (= (distance room_center ?h) (distance ?b agent)) (agent_holds ?b)) (or (and (not (agent_holds ?h)) (adjacent ?h floor)) (and (not (agent_holds ?h)))) (and (same_object ?b ?h) (not (agent_holds ?h)))))
              (once (and (not (in_motion ?b)) (in ?h ?b)))
           )
         )
       )
        (preference throwAttempt
          (then
            (once (agent_holds ?b))
            (hold (and (not (agent_holds ?b)) (in_motion ?b)))
            (once (not (in_motion ?b)))
         )
       )
     )
   )
 )
)
(:terminal
  (> (external-forall-maximize (count throwAttempt)) 4)
)
(:scoring
  (count ballThrownToBin)
)
)



(define (game game-117-0-nd-17-rd-1-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt:bottom_shelf) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-1-nd-16-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (above ?r ?h)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-2-nd-5-rd-8-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (+ (* 3 (count-once-per-objects throwAttempt:cellphone))
        (count-longest throwAttempt:north_wall)
     )
      1
   )
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-3-nd-7-rd-10-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (in agent rug)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-4-nd-10-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (+ (* 70 (count-increasing-measure redDodgeballThrownToBinWithoutTouchingFloor:tall_rectangular_block_green:yellow) (count-once-per-objects redDodgeballThrownToBin:triangular_ramp))
        (count-once-per-objects redDodgeballThrownToBin:cube_block)
     )
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-5-nd-6-rd-7-rs-terminal-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (+ (- 0.5)
        20
     )
      6
   )
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-6-nd-15-rd-6-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (agent_holds door) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-7-nd-13-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (in ?r agent))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-8-nd-14-rd-3-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?r ?h) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-9-nd-6-rd-12-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (count redDodgeballThrownToBin:yellow:triangle_block)
 )
)
)





(define (game game-117-10-nd-16-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (not (not (< (distance ?r ?h) (distance ?h ?r))))) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-11-nd-12-rd-10-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (on ?r ?h))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-12-nd-10-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count redDodgeballThrownToBinWithoutTouchingFloor:curved_wooden_ramp:yellow)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-13-nd-20-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch ?h ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-14-nd-12-rd-5-rs-setup-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) (distance rug ?h))
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)





(define (game game-117-15-nd-11-rd-5-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:setup
  (and
    (exists (?h - hexagonal_bin ?r - triangular_ramp)
      (game-conserved
        (< (distance ?h ?r) 2)
     )
   )
 )
)
(:constraints
  (and
    (preference redDodgeballThrownToBinWithoutTouchingFloor
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r) (not (touch floor ?r))))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference redDodgeballThrownToBin
      (exists (?h - hexagonal_bin ?r - dodgeball_red)
        (then
          (once (agent_holds ?r))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (and (not (in_motion ?r)) (in ?h ?r)))
       )
     )
   )
    (preference throwAttempt
      (exists (?r - dodgeball_red)
        (then
          (once (or (in_motion ?r)))
          (hold (and (not (agent_holds ?r)) (in_motion ?r)))
          (once (not (in_motion ?r)))
       )
     )
   )
 )
)
(:terminal
  (or
    (>= (count throwAttempt) 10)
    (>= (count-once redDodgeballThrownToBinWithoutTouchingFloor) 1)
    (>= (count-once redDodgeballThrownToBin) 1)
 )
)
(:scoring
  (+ (* 5 (count-once redDodgeballThrownToBin))
    (* 3 (= (count throwAttempt) 1)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
    (* 2 (< (count throwAttempt) 5)
      (count-once redDodgeballThrownToBinWithoutTouchingFloor)
   )
 )
)
)



(define (game game-118-0-nd-5-rd-9-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (count itemsTurnedOff:game_object:dodgeball)
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-1-nd-10-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?p3 - doggie_bed)
        (at-end
          (broken ?p3)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-2-nd-12-rd-5-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects itemsBroken:cylindrical_block_green:tan))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-3-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (adjacent ?o2 ?o1)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-4-nd-12-rd-2-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects itemsBroken:hexagonal_bin:shelf))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-5-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (not
                    (in_motion ?o1)
                 )
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-6-nd-14-rd-1-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either side_table lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-7-nd-5-rd-12-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    30
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-8-nd-18-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (agent_holds agent)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-9-nd-17-rd-4-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (agent_holds ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-10-nd-12-rd-3-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (in_motion ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-11-nd-13-rd-4-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects itemsTurnedOff:beachball))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-12-nd-13-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - mug)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-13-nd-11-rd-3-rs-scoring-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count itemsTurnedOff:brown))
 )
)
)





(define (game game-118-14-nd-9-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - (either pink yellow purple))
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o1 ?o2)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)





(define (game game-118-15-nd-19-rd-2-rs-constraints-sk-prior5-nr-1) (:domain medium-objects-room-v1)
(:constraints
  (and
    (forall (?x - color)
      (and
        (preference objectWithMatchingColor
          (exists (?o1 ?o2 - game_object)
            (at-end
              (and
                (same_color ?o1 ?o2)
                (same_color ?o1 ?x)
                (or
                  (on ?o2 agent)
                  (adjacent ?o1 ?o2)
                  (in ?o1 ?o2)
               )
             )
           )
         )
       )
     )
   )
    (preference itemsTurnedOff
      (exists (?o - (either main_light_switch lamp))
        (at-end
          (not
            (toggled_on ?o)
         )
       )
     )
   )
    (preference itemsBroken
      (exists (?o - game_object)
        (at-end
          (broken ?o)
       )
     )
   )
 )
)
(:scoring
  (+ (* 5 (count-once-per-objects objectWithMatchingColor))
    (* 5 (count-once-per-objects objectWithMatchingColor:green))
    (* 5 (count-once-per-objects objectWithMatchingColor:brown))
    (* 15 (count-once-per-objects itemsTurnedOff))
    (* -10 (count-once-per-objects itemsBroken))
 )
)
)
